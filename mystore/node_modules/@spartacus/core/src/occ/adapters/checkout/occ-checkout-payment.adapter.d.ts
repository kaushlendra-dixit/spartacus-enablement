import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CheckoutPaymentAdapter } from '../../../checkout/connectors/payment/checkout-payment.adapter';
import { CardType, PaymentDetails } from '../../../model/cart.model';
import { ConverterService } from '../../../util/converter.service';
import { OccEndpointsService } from '../../services/occ-endpoints.service';
import * as ɵngcc0 from '@angular/core';
export declare class OccCheckoutPaymentAdapter implements CheckoutPaymentAdapter {
    protected http: HttpClient;
    protected occEndpoints: OccEndpointsService;
    protected converter: ConverterService;
    constructor(http: HttpClient, occEndpoints: OccEndpointsService, converter: ConverterService);
    private domparser;
    protected getCartEndpoint(userId: string): string;
    create(userId: string, cartId: string, paymentDetails: PaymentDetails): Observable<PaymentDetails>;
    set(userId: string, cartId: string, paymentDetailsId: string): Observable<any>;
    loadCardTypes(): Observable<CardType[]>;
    protected getProviderSubInfo(userId: string, cartId: string): Observable<any>;
    protected createSubWithProvider(postUrl: string, parameters: any): Observable<any>;
    protected createDetailsWithParameters(userId: string, cartId: string, parameters: any): Observable<PaymentDetails>;
    private getParamsForPaymentProvider;
    private extractPaymentDetailsFromHtml;
    private convertToMap;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OccCheckoutPaymentAdapter, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<OccCheckoutPaymentAdapter>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLWNoZWNrb3V0LXBheW1lbnQuYWRhcHRlci5kLnRzIiwic291cmNlcyI6WyJvY2MtY2hlY2tvdXQtcGF5bWVudC5hZGFwdGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQ2hlY2tvdXRQYXltZW50QWRhcHRlciB9IGZyb20gJy4uLy4uLy4uL2NoZWNrb3V0L2Nvbm5lY3RvcnMvcGF5bWVudC9jaGVja291dC1wYXltZW50LmFkYXB0ZXInO1xyXG5pbXBvcnQgeyBDYXJkVHlwZSwgUGF5bWVudERldGFpbHMgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jYXJ0Lm1vZGVsJztcclxuaW1wb3J0IHsgQ29udmVydGVyU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3V0aWwvY29udmVydGVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBPY2NFbmRwb2ludHNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvb2NjLWVuZHBvaW50cy5zZXJ2aWNlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT2NjQ2hlY2tvdXRQYXltZW50QWRhcHRlciBpbXBsZW1lbnRzIENoZWNrb3V0UGF5bWVudEFkYXB0ZXIge1xyXG4gICAgcHJvdGVjdGVkIGh0dHA6IEh0dHBDbGllbnQ7XHJcbiAgICBwcm90ZWN0ZWQgb2NjRW5kcG9pbnRzOiBPY2NFbmRwb2ludHNTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIGNvbnZlcnRlcjogQ29udmVydGVyU2VydmljZTtcclxuICAgIGNvbnN0cnVjdG9yKGh0dHA6IEh0dHBDbGllbnQsIG9jY0VuZHBvaW50czogT2NjRW5kcG9pbnRzU2VydmljZSwgY29udmVydGVyOiBDb252ZXJ0ZXJTZXJ2aWNlKTtcclxuICAgIHByaXZhdGUgZG9tcGFyc2VyO1xyXG4gICAgcHJvdGVjdGVkIGdldENhcnRFbmRwb2ludCh1c2VySWQ6IHN0cmluZyk6IHN0cmluZztcclxuICAgIGNyZWF0ZSh1c2VySWQ6IHN0cmluZywgY2FydElkOiBzdHJpbmcsIHBheW1lbnREZXRhaWxzOiBQYXltZW50RGV0YWlscyk6IE9ic2VydmFibGU8UGF5bWVudERldGFpbHM+O1xyXG4gICAgc2V0KHVzZXJJZDogc3RyaW5nLCBjYXJ0SWQ6IHN0cmluZywgcGF5bWVudERldGFpbHNJZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxhbnk+O1xyXG4gICAgbG9hZENhcmRUeXBlcygpOiBPYnNlcnZhYmxlPENhcmRUeXBlW10+O1xyXG4gICAgcHJvdGVjdGVkIGdldFByb3ZpZGVyU3ViSW5mbyh1c2VySWQ6IHN0cmluZywgY2FydElkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGFueT47XHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlU3ViV2l0aFByb3ZpZGVyKHBvc3RVcmw6IHN0cmluZywgcGFyYW1ldGVyczogYW55KTogT2JzZXJ2YWJsZTxhbnk+O1xyXG4gICAgcHJvdGVjdGVkIGNyZWF0ZURldGFpbHNXaXRoUGFyYW1ldGVycyh1c2VySWQ6IHN0cmluZywgY2FydElkOiBzdHJpbmcsIHBhcmFtZXRlcnM6IGFueSk6IE9ic2VydmFibGU8UGF5bWVudERldGFpbHM+O1xyXG4gICAgcHJpdmF0ZSBnZXRQYXJhbXNGb3JQYXltZW50UHJvdmlkZXI7XHJcbiAgICBwcml2YXRlIGV4dHJhY3RQYXltZW50RGV0YWlsc0Zyb21IdG1sO1xyXG4gICAgcHJpdmF0ZSBjb252ZXJ0VG9NYXA7XHJcbn1cclxuIl19