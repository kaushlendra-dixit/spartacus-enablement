import { ProductSearchPage } from '../../../../model/product-search.model';
import { Converter, ConverterService } from '../../../../util/converter.service';
import { Occ } from '../../../occ-models/occ.models';
import * as ɵngcc0 from '@angular/core';
export declare class OccProductSearchPageNormalizer implements Converter<Occ.ProductSearchPage, ProductSearchPage> {
    private converterService;
    constructor(converterService: ConverterService);
    /**
     * Specifies the minimal number of top values in case
     * non have been setup by the business.
     */
    protected DEFAULT_TOP_VALUES: number;
    convert(source: Occ.ProductSearchPage, target?: ProductSearchPage): ProductSearchPage;
    private normalizeFacets;
    /**
     * The (current) backend returns facets with values that do not contribute
     * to the facet navigation much, as the number in the result list will not get
     * behavior, see https://jira.hybris.com/browse/CS-427.
     *
     * As long as this is not in place, we manually filter the facet from the list;
     * any facet that does not have a count < the total results will be dropped from
     * the facets.
     */
    private normalizeUselessFacets;
    private normalizeFacetValues;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OccProductSearchPageNormalizer, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLXByb2R1Y3Qtc2VhcmNoLXBhZ2Utbm9ybWFsaXplci5kLnRzIiwic291cmNlcyI6WyJvY2MtcHJvZHVjdC1zZWFyY2gtcGFnZS1ub3JtYWxpemVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2R1Y3RTZWFyY2hQYWdlIH0gZnJvbSAnLi4vLi4vLi4vLi4vbW9kZWwvcHJvZHVjdC1zZWFyY2gubW9kZWwnO1xyXG5pbXBvcnQgeyBDb252ZXJ0ZXIsIENvbnZlcnRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlsL2NvbnZlcnRlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgT2NjIH0gZnJvbSAnLi4vLi4vLi4vb2NjLW1vZGVscy9vY2MubW9kZWxzJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT2NjUHJvZHVjdFNlYXJjaFBhZ2VOb3JtYWxpemVyIGltcGxlbWVudHMgQ29udmVydGVyPE9jYy5Qcm9kdWN0U2VhcmNoUGFnZSwgUHJvZHVjdFNlYXJjaFBhZ2U+IHtcclxuICAgIHByaXZhdGUgY29udmVydGVyU2VydmljZTtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnZlcnRlclNlcnZpY2U6IENvbnZlcnRlclNlcnZpY2UpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBTcGVjaWZpZXMgdGhlIG1pbmltYWwgbnVtYmVyIG9mIHRvcCB2YWx1ZXMgaW4gY2FzZVxyXG4gICAgICogbm9uIGhhdmUgYmVlbiBzZXR1cCBieSB0aGUgYnVzaW5lc3MuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBERUZBVUxUX1RPUF9WQUxVRVM6IG51bWJlcjtcclxuICAgIGNvbnZlcnQoc291cmNlOiBPY2MuUHJvZHVjdFNlYXJjaFBhZ2UsIHRhcmdldD86IFByb2R1Y3RTZWFyY2hQYWdlKTogUHJvZHVjdFNlYXJjaFBhZ2U7XHJcbiAgICBwcml2YXRlIG5vcm1hbGl6ZUZhY2V0cztcclxuICAgIC8qKlxyXG4gICAgICogVGhlIChjdXJyZW50KSBiYWNrZW5kIHJldHVybnMgZmFjZXRzIHdpdGggdmFsdWVzIHRoYXQgZG8gbm90IGNvbnRyaWJ1dGVcclxuICAgICAqIHRvIHRoZSBmYWNldCBuYXZpZ2F0aW9uIG11Y2gsIGFzIHRoZSBudW1iZXIgaW4gdGhlIHJlc3VsdCBsaXN0IHdpbGwgbm90IGdldFxyXG4gICAgICogYmVoYXZpb3IsIHNlZSBodHRwczovL2ppcmEuaHlicmlzLmNvbS9icm93c2UvQ1MtNDI3LlxyXG4gICAgICpcclxuICAgICAqIEFzIGxvbmcgYXMgdGhpcyBpcyBub3QgaW4gcGxhY2UsIHdlIG1hbnVhbGx5IGZpbHRlciB0aGUgZmFjZXQgZnJvbSB0aGUgbGlzdDtcclxuICAgICAqIGFueSBmYWNldCB0aGF0IGRvZXMgbm90IGhhdmUgYSBjb3VudCA8IHRoZSB0b3RhbCByZXN1bHRzIHdpbGwgYmUgZHJvcHBlZCBmcm9tXHJcbiAgICAgKiB0aGUgZmFjZXRzLlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIG5vcm1hbGl6ZVVzZWxlc3NGYWNldHM7XHJcbiAgICBwcml2YXRlIG5vcm1hbGl6ZUZhY2V0VmFsdWVzO1xyXG59XHJcbiJdfQ==