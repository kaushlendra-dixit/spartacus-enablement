import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CmsComponentAdapter } from '../../../cms/connectors/component/cms-component.adapter';
import { CmsComponent } from '../../../model/cms.model';
import { PageContext } from '../../../routing';
import { ConverterService } from '../../../util/converter.service';
import { OccEndpointsService } from '../../services/occ-endpoints.service';
import * as ɵngcc0 from '@angular/core';
export declare class OccCmsComponentAdapter implements CmsComponentAdapter {
    private http;
    private occEndpoints;
    protected converter: ConverterService;
    protected headers: HttpHeaders;
    constructor(http: HttpClient, occEndpoints: OccEndpointsService, converter: ConverterService);
    load<T extends CmsComponent>(id: string, pageContext: PageContext): Observable<T>;
    findComponentsByIds(ids: string[], pageContext: PageContext, fields?: string, currentPage?: number, pageSize?: number, sort?: string): Observable<CmsComponent[]>;
    findComponentsByIdsLegacy(ids: string[], pageContext: PageContext, fields?: string, currentPage?: number, pageSize?: number, sort?: string): Observable<CmsComponent[]>;
    protected getComponentEndPoint(id: string, pageContext: PageContext): string;
    protected getComponentsEndpoint(requestParams: any, fields: string): string;
    private getPaginationParams;
    private getContextParams;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OccCmsComponentAdapter, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<OccCmsComponentAdapter>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLWNtcy1jb21wb25lbnQuYWRhcHRlci5kLnRzIiwic291cmNlcyI6WyJvY2MtY21zLWNvbXBvbmVudC5hZGFwdGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQ21zQ29tcG9uZW50QWRhcHRlciB9IGZyb20gJy4uLy4uLy4uL2Ntcy9jb25uZWN0b3JzL2NvbXBvbmVudC9jbXMtY29tcG9uZW50LmFkYXB0ZXInO1xyXG5pbXBvcnQgeyBDbXNDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9tb2RlbC9jbXMubW9kZWwnO1xyXG5pbXBvcnQgeyBQYWdlQ29udGV4dCB9IGZyb20gJy4uLy4uLy4uL3JvdXRpbmcnO1xyXG5pbXBvcnQgeyBDb252ZXJ0ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbC9jb252ZXJ0ZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IE9jY0VuZHBvaW50c1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9vY2MtZW5kcG9pbnRzLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPY2NDbXNDb21wb25lbnRBZGFwdGVyIGltcGxlbWVudHMgQ21zQ29tcG9uZW50QWRhcHRlciB7XHJcbiAgICBwcml2YXRlIGh0dHA7XHJcbiAgICBwcml2YXRlIG9jY0VuZHBvaW50cztcclxuICAgIHByb3RlY3RlZCBjb252ZXJ0ZXI6IENvbnZlcnRlclNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgaGVhZGVyczogSHR0cEhlYWRlcnM7XHJcbiAgICBjb25zdHJ1Y3RvcihodHRwOiBIdHRwQ2xpZW50LCBvY2NFbmRwb2ludHM6IE9jY0VuZHBvaW50c1NlcnZpY2UsIGNvbnZlcnRlcjogQ29udmVydGVyU2VydmljZSk7XHJcbiAgICBsb2FkPFQgZXh0ZW5kcyBDbXNDb21wb25lbnQ+KGlkOiBzdHJpbmcsIHBhZ2VDb250ZXh0OiBQYWdlQ29udGV4dCk6IE9ic2VydmFibGU8VD47XHJcbiAgICBmaW5kQ29tcG9uZW50c0J5SWRzKGlkczogc3RyaW5nW10sIHBhZ2VDb250ZXh0OiBQYWdlQ29udGV4dCwgZmllbGRzPzogc3RyaW5nLCBjdXJyZW50UGFnZT86IG51bWJlciwgcGFnZVNpemU/OiBudW1iZXIsIHNvcnQ/OiBzdHJpbmcpOiBPYnNlcnZhYmxlPENtc0NvbXBvbmVudFtdPjtcclxuICAgIGZpbmRDb21wb25lbnRzQnlJZHNMZWdhY3koaWRzOiBzdHJpbmdbXSwgcGFnZUNvbnRleHQ6IFBhZ2VDb250ZXh0LCBmaWVsZHM/OiBzdHJpbmcsIGN1cnJlbnRQYWdlPzogbnVtYmVyLCBwYWdlU2l6ZT86IG51bWJlciwgc29ydD86IHN0cmluZyk6IE9ic2VydmFibGU8Q21zQ29tcG9uZW50W10+O1xyXG4gICAgcHJvdGVjdGVkIGdldENvbXBvbmVudEVuZFBvaW50KGlkOiBzdHJpbmcsIHBhZ2VDb250ZXh0OiBQYWdlQ29udGV4dCk6IHN0cmluZztcclxuICAgIHByb3RlY3RlZCBnZXRDb21wb25lbnRzRW5kcG9pbnQocmVxdWVzdFBhcmFtczogYW55LCBmaWVsZHM6IHN0cmluZyk6IHN0cmluZztcclxuICAgIHByaXZhdGUgZ2V0UGFnaW5hdGlvblBhcmFtcztcclxuICAgIHByaXZhdGUgZ2V0Q29udGV4dFBhcmFtcztcclxufVxyXG4iXX0=