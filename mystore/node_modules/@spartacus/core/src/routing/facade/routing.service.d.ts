import { NavigationExtras } from '@angular/router';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { WindowRef } from '../../window/window-ref';
import { SemanticPathService } from '../configurable-routes/url-translation/semantic-path.service';
import { UrlCommands } from '../configurable-routes/url-translation/url-command';
import { PageContext } from '../models/page-context.model';
import { RouterState } from '../store/routing-state';
import * as ɵngcc0 from '@angular/core';
export declare class RoutingService {
    protected store: Store<RouterState>;
    protected winRef: WindowRef;
    protected semanticPathService: SemanticPathService;
    constructor(store: Store<RouterState>, winRef: WindowRef, semanticPathService: SemanticPathService);
    /**
     * Get the current router state
     */
    getRouterState(): Observable<RouterState>;
    /**
     * Get the `PageContext` from the state
     */
    getPageContext(): Observable<PageContext>;
    /**
     * Get the next `PageContext` from the state
     */
    getNextPageContext(): Observable<PageContext>;
    /**
     * Get the `isNavigating` info from the state
     */
    isNavigating(): Observable<boolean>;
    /**
     * Navigation with a new state into history
     * @param commands: url commands
     * @param query
     * @param extras: Represents the extra options used during navigation.
     */
    go(commands: UrlCommands, query?: object, extras?: NavigationExtras): void;
    /**
     * Navigation using URL
     * @param url
     */
    goByUrl(url: string): void;
    /**
     * Navigating back
     */
    back(): void;
    /**
     * Navigating forward
     */
    forward(): void;
    /**
     * Navigation with a new state into history
     * @param path
     * @param query
     * @param extras: Represents the extra options used during navigation.
     */
    protected navigate(path: any[], query?: object, extras?: NavigationExtras): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RoutingService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGluZy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInJvdXRpbmcuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmF2aWdhdGlvbkV4dHJhcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IFdpbmRvd1JlZiB9IGZyb20gJy4uLy4uL3dpbmRvdy93aW5kb3ctcmVmJztcclxuaW1wb3J0IHsgU2VtYW50aWNQYXRoU2VydmljZSB9IGZyb20gJy4uL2NvbmZpZ3VyYWJsZS1yb3V0ZXMvdXJsLXRyYW5zbGF0aW9uL3NlbWFudGljLXBhdGguc2VydmljZSc7XHJcbmltcG9ydCB7IFVybENvbW1hbmRzIH0gZnJvbSAnLi4vY29uZmlndXJhYmxlLXJvdXRlcy91cmwtdHJhbnNsYXRpb24vdXJsLWNvbW1hbmQnO1xyXG5pbXBvcnQgeyBQYWdlQ29udGV4dCB9IGZyb20gJy4uL21vZGVscy9wYWdlLWNvbnRleHQubW9kZWwnO1xyXG5pbXBvcnQgeyBSb3V0ZXJTdGF0ZSB9IGZyb20gJy4uL3N0b3JlL3JvdXRpbmctc3RhdGUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSb3V0aW5nU2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgc3RvcmU6IFN0b3JlPFJvdXRlclN0YXRlPjtcclxuICAgIHByb3RlY3RlZCB3aW5SZWY6IFdpbmRvd1JlZjtcclxuICAgIHByb3RlY3RlZCBzZW1hbnRpY1BhdGhTZXJ2aWNlOiBTZW1hbnRpY1BhdGhTZXJ2aWNlO1xyXG4gICAgY29uc3RydWN0b3Ioc3RvcmU6IFN0b3JlPFJvdXRlclN0YXRlPiwgd2luUmVmOiBXaW5kb3dSZWYsIHNlbWFudGljUGF0aFNlcnZpY2U6IFNlbWFudGljUGF0aFNlcnZpY2UpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIGN1cnJlbnQgcm91dGVyIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGdldFJvdXRlclN0YXRlKCk6IE9ic2VydmFibGU8Um91dGVyU3RhdGU+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgdGhlIGBQYWdlQ29udGV4dGAgZnJvbSB0aGUgc3RhdGVcclxuICAgICAqL1xyXG4gICAgZ2V0UGFnZUNvbnRleHQoKTogT2JzZXJ2YWJsZTxQYWdlQ29udGV4dD47XHJcbiAgICAvKipcclxuICAgICAqIEdldCB0aGUgbmV4dCBgUGFnZUNvbnRleHRgIGZyb20gdGhlIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGdldE5leHRQYWdlQ29udGV4dCgpOiBPYnNlcnZhYmxlPFBhZ2VDb250ZXh0PjtcclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRoZSBgaXNOYXZpZ2F0aW5nYCBpbmZvIGZyb20gdGhlIHN0YXRlXHJcbiAgICAgKi9cclxuICAgIGlzTmF2aWdhdGluZygpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBOYXZpZ2F0aW9uIHdpdGggYSBuZXcgc3RhdGUgaW50byBoaXN0b3J5XHJcbiAgICAgKiBAcGFyYW0gY29tbWFuZHM6IHVybCBjb21tYW5kc1xyXG4gICAgICogQHBhcmFtIHF1ZXJ5XHJcbiAgICAgKiBAcGFyYW0gZXh0cmFzOiBSZXByZXNlbnRzIHRoZSBleHRyYSBvcHRpb25zIHVzZWQgZHVyaW5nIG5hdmlnYXRpb24uXHJcbiAgICAgKi9cclxuICAgIGdvKGNvbW1hbmRzOiBVcmxDb21tYW5kcywgcXVlcnk/OiBvYmplY3QsIGV4dHJhcz86IE5hdmlnYXRpb25FeHRyYXMpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBOYXZpZ2F0aW9uIHVzaW5nIFVSTFxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICovXHJcbiAgICBnb0J5VXJsKHVybDogc3RyaW5nKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogTmF2aWdhdGluZyBiYWNrXHJcbiAgICAgKi9cclxuICAgIGJhY2soKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogTmF2aWdhdGluZyBmb3J3YXJkXHJcbiAgICAgKi9cclxuICAgIGZvcndhcmQoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogTmF2aWdhdGlvbiB3aXRoIGEgbmV3IHN0YXRlIGludG8gaGlzdG9yeVxyXG4gICAgICogQHBhcmFtIHBhdGhcclxuICAgICAqIEBwYXJhbSBxdWVyeVxyXG4gICAgICogQHBhcmFtIGV4dHJhczogUmVwcmVzZW50cyB0aGUgZXh0cmEgb3B0aW9ucyB1c2VkIGR1cmluZyBuYXZpZ2F0aW9uLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgbmF2aWdhdGUocGF0aDogYW55W10sIHF1ZXJ5Pzogb2JqZWN0LCBleHRyYXM/OiBOYXZpZ2F0aW9uRXh0cmFzKTogdm9pZDtcclxufVxyXG4iXX0=