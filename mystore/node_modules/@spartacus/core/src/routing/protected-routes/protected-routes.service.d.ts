import { RoutingConfig } from '../configurable-routes/config/routing-config';
import * as ɵngcc0 from '@angular/core';
export declare class ProtectedRoutesService {
    protected config: RoutingConfig;
    private nonProtectedPaths;
    protected get routingConfig(): RoutingConfig['routing'];
    /**
     * Returns 'protected' property (boolean) from routing config
     *
     * @returns boolean
     */
    get shouldProtect(): boolean;
    constructor(config: RoutingConfig);
    /**
     * Tells if the url is protected
     */
    isUrlProtected(urlSegments: string[]): boolean;
    /**
     * Tells whether the url matches at least one of the paths
     */
    protected matchAnyPath(urlSegments: string[], pathsSegments: string[][]): boolean;
    /**
     * Tells whether the url matches the path
     */
    protected matchPath(urlSegments: string[], pathSegments: string[]): boolean;
    /**
     * Returns a list of paths that are not protected
     */
    protected getNonProtectedPaths(): string[];
    /**
     * Splits the url by slashes
     */
    protected getSegments(url: string): string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProtectedRoutesService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdGVjdGVkLXJvdXRlcy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInByb3RlY3RlZC1yb3V0ZXMuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGluZ0NvbmZpZyB9IGZyb20gJy4uL2NvbmZpZ3VyYWJsZS1yb3V0ZXMvY29uZmlnL3JvdXRpbmctY29uZmlnJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUHJvdGVjdGVkUm91dGVzU2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgY29uZmlnOiBSb3V0aW5nQ29uZmlnO1xyXG4gICAgcHJpdmF0ZSBub25Qcm90ZWN0ZWRQYXRocztcclxuICAgIHByb3RlY3RlZCBnZXQgcm91dGluZ0NvbmZpZygpOiBSb3V0aW5nQ29uZmlnWydyb3V0aW5nJ107XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgJ3Byb3RlY3RlZCcgcHJvcGVydHkgKGJvb2xlYW4pIGZyb20gcm91dGluZyBjb25maWdcclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyBib29sZWFuXHJcbiAgICAgKi9cclxuICAgIGdldCBzaG91bGRQcm90ZWN0KCk6IGJvb2xlYW47XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IFJvdXRpbmdDb25maWcpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBUZWxscyBpZiB0aGUgdXJsIGlzIHByb3RlY3RlZFxyXG4gICAgICovXHJcbiAgICBpc1VybFByb3RlY3RlZCh1cmxTZWdtZW50czogc3RyaW5nW10pOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBUZWxscyB3aGV0aGVyIHRoZSB1cmwgbWF0Y2hlcyBhdCBsZWFzdCBvbmUgb2YgdGhlIHBhdGhzXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBtYXRjaEFueVBhdGgodXJsU2VnbWVudHM6IHN0cmluZ1tdLCBwYXRoc1NlZ21lbnRzOiBzdHJpbmdbXVtdKTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogVGVsbHMgd2hldGhlciB0aGUgdXJsIG1hdGNoZXMgdGhlIHBhdGhcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIG1hdGNoUGF0aCh1cmxTZWdtZW50czogc3RyaW5nW10sIHBhdGhTZWdtZW50czogc3RyaW5nW10pOiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBwYXRocyB0aGF0IGFyZSBub3QgcHJvdGVjdGVkXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBnZXROb25Qcm90ZWN0ZWRQYXRocygpOiBzdHJpbmdbXTtcclxuICAgIC8qKlxyXG4gICAgICogU3BsaXRzIHRoZSB1cmwgYnkgc2xhc2hlc1xyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgZ2V0U2VnbWVudHModXJsOiBzdHJpbmcpOiBzdHJpbmdbXTtcclxufVxyXG4iXX0=