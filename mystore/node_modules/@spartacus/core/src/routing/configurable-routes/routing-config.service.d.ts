import { RouteLoadStrategy, RoutingConfig } from './config/routing-config';
import { RouteConfig } from './routes-config';
import * as ɵngcc0 from '@angular/core';
export declare class RoutingConfigService {
    protected config: RoutingConfig;
    /**
     * Reversed routing config for quick lookup of the route name by the configured path.
     */
    protected routeNamesByPath: {
        [path: string]: string;
    };
    constructor(config: RoutingConfig);
    /**
     * Returns the route config for the given route name.
     */
    getRouteConfig(routeName: string): RouteConfig;
    private warn;
    /**
     * Returns the configured route loading strategy.
     */
    getLoadStrategy(): RouteLoadStrategy;
    /**
     * Returns the route name of the configured path.
     *
     * For example, when the config is:
     * ```
     * routing: {
     *   routes: {
     *      addressBook: { paths: ['my-account/address-book'] }
     *   }
     * }
     * ```
     *
     * the `getRouteName('my-account/address-book')` returns `'addressBook'`.
     */
    getRouteName(path: string): string;
    /**
     * Initializes the property `routeNamesByPath`.
     *
     * The original config allows for reading configured path by the route name.
     * But this method builds up a structure with a 'reversed config'
     * to read quickly the route name by the path.
     */
    protected initRouteNamesByPath(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RoutingConfigService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGluZy1jb25maWcuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJyb3V0aW5nLWNvbmZpZy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVMb2FkU3RyYXRlZ3ksIFJvdXRpbmdDb25maWcgfSBmcm9tICcuL2NvbmZpZy9yb3V0aW5nLWNvbmZpZyc7XHJcbmltcG9ydCB7IFJvdXRlQ29uZmlnIH0gZnJvbSAnLi9yb3V0ZXMtY29uZmlnJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUm91dGluZ0NvbmZpZ1NlcnZpY2Uge1xyXG4gICAgcHJvdGVjdGVkIGNvbmZpZzogUm91dGluZ0NvbmZpZztcclxuICAgIC8qKlxyXG4gICAgICogUmV2ZXJzZWQgcm91dGluZyBjb25maWcgZm9yIHF1aWNrIGxvb2t1cCBvZiB0aGUgcm91dGUgbmFtZSBieSB0aGUgY29uZmlndXJlZCBwYXRoLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgcm91dGVOYW1lc0J5UGF0aDoge1xyXG4gICAgICAgIFtwYXRoOiBzdHJpbmddOiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBSb3V0aW5nQ29uZmlnKTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgcm91dGUgY29uZmlnIGZvciB0aGUgZ2l2ZW4gcm91dGUgbmFtZS5cclxuICAgICAqL1xyXG4gICAgZ2V0Um91dGVDb25maWcocm91dGVOYW1lOiBzdHJpbmcpOiBSb3V0ZUNvbmZpZztcclxuICAgIHByaXZhdGUgd2FybjtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY29uZmlndXJlZCByb3V0ZSBsb2FkaW5nIHN0cmF0ZWd5LlxyXG4gICAgICovXHJcbiAgICBnZXRMb2FkU3RyYXRlZ3koKTogUm91dGVMb2FkU3RyYXRlZ3k7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIHJvdXRlIG5hbWUgb2YgdGhlIGNvbmZpZ3VyZWQgcGF0aC5cclxuICAgICAqXHJcbiAgICAgKiBGb3IgZXhhbXBsZSwgd2hlbiB0aGUgY29uZmlnIGlzOlxyXG4gICAgICogYGBgXHJcbiAgICAgKiByb3V0aW5nOiB7XHJcbiAgICAgKiAgIHJvdXRlczoge1xyXG4gICAgICogICAgICBhZGRyZXNzQm9vazogeyBwYXRoczogWydteS1hY2NvdW50L2FkZHJlc3MtYm9vayddIH1cclxuICAgICAqICAgfVxyXG4gICAgICogfVxyXG4gICAgICogYGBgXHJcbiAgICAgKlxyXG4gICAgICogdGhlIGBnZXRSb3V0ZU5hbWUoJ215LWFjY291bnQvYWRkcmVzcy1ib29rJylgIHJldHVybnMgYCdhZGRyZXNzQm9vaydgLlxyXG4gICAgICovXHJcbiAgICBnZXRSb3V0ZU5hbWUocGF0aDogc3RyaW5nKTogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbml0aWFsaXplcyB0aGUgcHJvcGVydHkgYHJvdXRlTmFtZXNCeVBhdGhgLlxyXG4gICAgICpcclxuICAgICAqIFRoZSBvcmlnaW5hbCBjb25maWcgYWxsb3dzIGZvciByZWFkaW5nIGNvbmZpZ3VyZWQgcGF0aCBieSB0aGUgcm91dGUgbmFtZS5cclxuICAgICAqIEJ1dCB0aGlzIG1ldGhvZCBidWlsZHMgdXAgYSBzdHJ1Y3R1cmUgd2l0aCBhICdyZXZlcnNlZCBjb25maWcnXHJcbiAgICAgKiB0byByZWFkIHF1aWNrbHkgdGhlIHJvdXRlIG5hbWUgYnkgdGhlIHBhdGguXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBpbml0Um91dGVOYW1lc0J5UGF0aCgpOiB2b2lkO1xyXG59XHJcbiJdfQ==