import { Observable } from 'rxjs';
import { TranslationService } from '../../i18n/translation.service';
import { CmsService } from '../facade/cms.service';
import { BreadcrumbMeta, Page } from '../model/page.model';
import { PageMetaResolver } from './page-meta.resolver';
import { PageBreadcrumbResolver, PageTitleResolver } from './page.resolvers';
/**
 * Resolves the page data for all Content Pages based on the `PageType.CONTENT_PAGE`.
 * More specific resolvers for content pages can be implemented by making them more
 * specific, for example by using the page template (see `CartPageMetaResolver`).
 *
 * The page title, and breadcrumbs are resolved in this implementation only.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ContentPageMetaResolver extends PageMetaResolver implements PageTitleResolver, PageBreadcrumbResolver {
    protected cms: CmsService;
    protected translation: TranslationService;
    /** helper to provie access to the current CMS page */
    protected cms$: Observable<Page>;
    constructor(cms: CmsService, translation: TranslationService);
    /**
     * Resolves the page title for the ContentPage by taking the title
     * from the backend data.
     */
    resolveTitle(): Observable<string>;
    /**
     * Resolves a single breacrumb item to the home page for each `ContentPage`.
     * The home page label is resolved from the translation service.
     */
    resolveBreadcrumbs(): Observable<BreadcrumbMeta[]>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ContentPageMetaResolver, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1wYWdlLW1ldGEucmVzb2x2ZXIuZC50cyIsInNvdXJjZXMiOlsiY29udGVudC1wYWdlLW1ldGEucmVzb2x2ZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vaTE4bi90cmFuc2xhdGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQ21zU2VydmljZSB9IGZyb20gJy4uL2ZhY2FkZS9jbXMuc2VydmljZSc7XHJcbmltcG9ydCB7IEJyZWFkY3J1bWJNZXRhLCBQYWdlIH0gZnJvbSAnLi4vbW9kZWwvcGFnZS5tb2RlbCc7XHJcbmltcG9ydCB7IFBhZ2VNZXRhUmVzb2x2ZXIgfSBmcm9tICcuL3BhZ2UtbWV0YS5yZXNvbHZlcic7XHJcbmltcG9ydCB7IFBhZ2VCcmVhZGNydW1iUmVzb2x2ZXIsIFBhZ2VUaXRsZVJlc29sdmVyIH0gZnJvbSAnLi9wYWdlLnJlc29sdmVycyc7XHJcbi8qKlxyXG4gKiBSZXNvbHZlcyB0aGUgcGFnZSBkYXRhIGZvciBhbGwgQ29udGVudCBQYWdlcyBiYXNlZCBvbiB0aGUgYFBhZ2VUeXBlLkNPTlRFTlRfUEFHRWAuXHJcbiAqIE1vcmUgc3BlY2lmaWMgcmVzb2x2ZXJzIGZvciBjb250ZW50IHBhZ2VzIGNhbiBiZSBpbXBsZW1lbnRlZCBieSBtYWtpbmcgdGhlbSBtb3JlXHJcbiAqIHNwZWNpZmljLCBmb3IgZXhhbXBsZSBieSB1c2luZyB0aGUgcGFnZSB0ZW1wbGF0ZSAoc2VlIGBDYXJ0UGFnZU1ldGFSZXNvbHZlcmApLlxyXG4gKlxyXG4gKiBUaGUgcGFnZSB0aXRsZSwgYW5kIGJyZWFkY3J1bWJzIGFyZSByZXNvbHZlZCBpbiB0aGlzIGltcGxlbWVudGF0aW9uIG9ubHkuXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb250ZW50UGFnZU1ldGFSZXNvbHZlciBleHRlbmRzIFBhZ2VNZXRhUmVzb2x2ZXIgaW1wbGVtZW50cyBQYWdlVGl0bGVSZXNvbHZlciwgUGFnZUJyZWFkY3J1bWJSZXNvbHZlciB7XHJcbiAgICBwcm90ZWN0ZWQgY21zOiBDbXNTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIHRyYW5zbGF0aW9uOiBUcmFuc2xhdGlvblNlcnZpY2U7XHJcbiAgICAvKiogaGVscGVyIHRvIHByb3ZpZSBhY2Nlc3MgdG8gdGhlIGN1cnJlbnQgQ01TIHBhZ2UgKi9cclxuICAgIHByb3RlY3RlZCBjbXMkOiBPYnNlcnZhYmxlPFBhZ2U+O1xyXG4gICAgY29uc3RydWN0b3IoY21zOiBDbXNTZXJ2aWNlLCB0cmFuc2xhdGlvbjogVHJhbnNsYXRpb25TZXJ2aWNlKTtcclxuICAgIC8qKlxyXG4gICAgICogUmVzb2x2ZXMgdGhlIHBhZ2UgdGl0bGUgZm9yIHRoZSBDb250ZW50UGFnZSBieSB0YWtpbmcgdGhlIHRpdGxlXHJcbiAgICAgKiBmcm9tIHRoZSBiYWNrZW5kIGRhdGEuXHJcbiAgICAgKi9cclxuICAgIHJlc29sdmVUaXRsZSgpOiBPYnNlcnZhYmxlPHN0cmluZz47XHJcbiAgICAvKipcclxuICAgICAqIFJlc29sdmVzIGEgc2luZ2xlIGJyZWFjcnVtYiBpdGVtIHRvIHRoZSBob21lIHBhZ2UgZm9yIGVhY2ggYENvbnRlbnRQYWdlYC5cclxuICAgICAqIFRoZSBob21lIHBhZ2UgbGFiZWwgaXMgcmVzb2x2ZWQgZnJvbSB0aGUgdHJhbnNsYXRpb24gc2VydmljZS5cclxuICAgICAqL1xyXG4gICAgcmVzb2x2ZUJyZWFkY3J1bWJzKCk6IE9ic2VydmFibGU8QnJlYWRjcnVtYk1ldGFbXT47XHJcbn1cclxuIl19