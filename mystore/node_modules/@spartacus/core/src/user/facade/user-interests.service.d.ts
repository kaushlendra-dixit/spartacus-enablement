import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { AuthService } from '../../auth/facade/auth.service';
import { NotificationType, ProductInterestEntryRelation, ProductInterestSearchResult } from '../../model/product-interest.model';
import { StateWithProcess } from '../../process/store/process-state';
import { StateWithUser } from '../store/user-state';
import * as ɵngcc0 from '@angular/core';
export declare class UserInterestsService {
    protected store: Store<StateWithUser | StateWithProcess<void>>;
    protected authService: AuthService;
    constructor(store: Store<StateWithUser | StateWithProcess<void>>, authService: AuthService);
    /**
     * Retrieves an product interest list
     * @param pageSize page size
     * @param currentPage current page
     * @param sort sort
     */
    loadProductInterests(pageSize?: number, currentPage?: number, sort?: string, productCode?: string, notificationType?: NotificationType): void;
    /**
     * Returns product interests
     */
    getProductInterests(): Observable<ProductInterestSearchResult>;
    /**
     * Returns product interests
     * @param pageSize the page size
     */
    getAndLoadProductInterests(pageSize?: number): Observable<ProductInterestSearchResult>;
    /**
     * Returns a loading flag for product interests
     */
    getProdutInterestsLoading(): Observable<boolean>;
    /**
     * Removes a ProductInterestRelation
     * @param item product interest relation item
     * @param singleDelete flag to delete only one interest
     */
    removeProdutInterest(item: ProductInterestEntryRelation, singleDelete?: boolean): void;
    /**
     * Returns a loading flag for removing product interests.
     */
    getRemoveProdutInterestLoading(): Observable<boolean>;
    /**
     * Returns a success flag for removing a product interests.
     */
    getRemoveProdutInterestSuccess(): Observable<boolean>;
    /**
     * Add a new product interest.
     *
     * @param productCode the product code
     * @param notificationType the notification type
     */
    addProductInterest(productCode: string, notificationType: NotificationType): void;
    /**
     * Returns a success flag for adding a product interest.
     */
    getAddProductInterestSuccess(): Observable<boolean>;
    /**
     * Returns a error flag for adding a product interest.
     */
    getAddProductInterestError(): Observable<boolean>;
    /**
     * Reset product interest adding state.
     */
    resetAddInterestState(): void;
    /**
     * Reset product interest removing state.
     */
    resetRemoveInterestState(): void;
    /**
     * Clears product interests
     */
    clearProductInterests(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserInterestsService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1pbnRlcmVzdHMuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ1c2VyLWludGVyZXN0cy5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4uLy4uL2F1dGgvZmFjYWRlL2F1dGguc2VydmljZSc7XHJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblR5cGUsIFByb2R1Y3RJbnRlcmVzdEVudHJ5UmVsYXRpb24sIFByb2R1Y3RJbnRlcmVzdFNlYXJjaFJlc3VsdCB9IGZyb20gJy4uLy4uL21vZGVsL3Byb2R1Y3QtaW50ZXJlc3QubW9kZWwnO1xyXG5pbXBvcnQgeyBTdGF0ZVdpdGhQcm9jZXNzIH0gZnJvbSAnLi4vLi4vcHJvY2Vzcy9zdG9yZS9wcm9jZXNzLXN0YXRlJztcclxuaW1wb3J0IHsgU3RhdGVXaXRoVXNlciB9IGZyb20gJy4uL3N0b3JlL3VzZXItc3RhdGUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBVc2VySW50ZXJlc3RzU2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgc3RvcmU6IFN0b3JlPFN0YXRlV2l0aFVzZXIgfCBTdGF0ZVdpdGhQcm9jZXNzPHZvaWQ+PjtcclxuICAgIHByb3RlY3RlZCBhdXRoU2VydmljZTogQXV0aFNlcnZpY2U7XHJcbiAgICBjb25zdHJ1Y3RvcihzdG9yZTogU3RvcmU8U3RhdGVXaXRoVXNlciB8IFN0YXRlV2l0aFByb2Nlc3M8dm9pZD4+LCBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXRyaWV2ZXMgYW4gcHJvZHVjdCBpbnRlcmVzdCBsaXN0XHJcbiAgICAgKiBAcGFyYW0gcGFnZVNpemUgcGFnZSBzaXplXHJcbiAgICAgKiBAcGFyYW0gY3VycmVudFBhZ2UgY3VycmVudCBwYWdlXHJcbiAgICAgKiBAcGFyYW0gc29ydCBzb3J0XHJcbiAgICAgKi9cclxuICAgIGxvYWRQcm9kdWN0SW50ZXJlc3RzKHBhZ2VTaXplPzogbnVtYmVyLCBjdXJyZW50UGFnZT86IG51bWJlciwgc29ydD86IHN0cmluZywgcHJvZHVjdENvZGU/OiBzdHJpbmcsIG5vdGlmaWNhdGlvblR5cGU/OiBOb3RpZmljYXRpb25UeXBlKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBwcm9kdWN0IGludGVyZXN0c1xyXG4gICAgICovXHJcbiAgICBnZXRQcm9kdWN0SW50ZXJlc3RzKCk6IE9ic2VydmFibGU8UHJvZHVjdEludGVyZXN0U2VhcmNoUmVzdWx0PjtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBwcm9kdWN0IGludGVyZXN0c1xyXG4gICAgICogQHBhcmFtIHBhZ2VTaXplIHRoZSBwYWdlIHNpemVcclxuICAgICAqL1xyXG4gICAgZ2V0QW5kTG9hZFByb2R1Y3RJbnRlcmVzdHMocGFnZVNpemU/OiBudW1iZXIpOiBPYnNlcnZhYmxlPFByb2R1Y3RJbnRlcmVzdFNlYXJjaFJlc3VsdD47XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBsb2FkaW5nIGZsYWcgZm9yIHByb2R1Y3QgaW50ZXJlc3RzXHJcbiAgICAgKi9cclxuICAgIGdldFByb2R1dEludGVyZXN0c0xvYWRpbmcoKTogT2JzZXJ2YWJsZTxib29sZWFuPjtcclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBhIFByb2R1Y3RJbnRlcmVzdFJlbGF0aW9uXHJcbiAgICAgKiBAcGFyYW0gaXRlbSBwcm9kdWN0IGludGVyZXN0IHJlbGF0aW9uIGl0ZW1cclxuICAgICAqIEBwYXJhbSBzaW5nbGVEZWxldGUgZmxhZyB0byBkZWxldGUgb25seSBvbmUgaW50ZXJlc3RcclxuICAgICAqL1xyXG4gICAgcmVtb3ZlUHJvZHV0SW50ZXJlc3QoaXRlbTogUHJvZHVjdEludGVyZXN0RW50cnlSZWxhdGlvbiwgc2luZ2xlRGVsZXRlPzogYm9vbGVhbik6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBsb2FkaW5nIGZsYWcgZm9yIHJlbW92aW5nIHByb2R1Y3QgaW50ZXJlc3RzLlxyXG4gICAgICovXHJcbiAgICBnZXRSZW1vdmVQcm9kdXRJbnRlcmVzdExvYWRpbmcoKTogT2JzZXJ2YWJsZTxib29sZWFuPjtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBhIHN1Y2Nlc3MgZmxhZyBmb3IgcmVtb3ZpbmcgYSBwcm9kdWN0IGludGVyZXN0cy5cclxuICAgICAqL1xyXG4gICAgZ2V0UmVtb3ZlUHJvZHV0SW50ZXJlc3RTdWNjZXNzKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcbiAgICAvKipcclxuICAgICAqIEFkZCBhIG5ldyBwcm9kdWN0IGludGVyZXN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwcm9kdWN0Q29kZSB0aGUgcHJvZHVjdCBjb2RlXHJcbiAgICAgKiBAcGFyYW0gbm90aWZpY2F0aW9uVHlwZSB0aGUgbm90aWZpY2F0aW9uIHR5cGVcclxuICAgICAqL1xyXG4gICAgYWRkUHJvZHVjdEludGVyZXN0KHByb2R1Y3RDb2RlOiBzdHJpbmcsIG5vdGlmaWNhdGlvblR5cGU6IE5vdGlmaWNhdGlvblR5cGUpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgc3VjY2VzcyBmbGFnIGZvciBhZGRpbmcgYSBwcm9kdWN0IGludGVyZXN0LlxyXG4gICAgICovXHJcbiAgICBnZXRBZGRQcm9kdWN0SW50ZXJlc3RTdWNjZXNzKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYSBlcnJvciBmbGFnIGZvciBhZGRpbmcgYSBwcm9kdWN0IGludGVyZXN0LlxyXG4gICAgICovXHJcbiAgICBnZXRBZGRQcm9kdWN0SW50ZXJlc3RFcnJvcigpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXNldCBwcm9kdWN0IGludGVyZXN0IGFkZGluZyBzdGF0ZS5cclxuICAgICAqL1xyXG4gICAgcmVzZXRBZGRJbnRlcmVzdFN0YXRlKCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFJlc2V0IHByb2R1Y3QgaW50ZXJlc3QgcmVtb3Zpbmcgc3RhdGUuXHJcbiAgICAgKi9cclxuICAgIHJlc2V0UmVtb3ZlSW50ZXJlc3RTdGF0ZSgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDbGVhcnMgcHJvZHVjdCBpbnRlcmVzdHNcclxuICAgICAqL1xyXG4gICAgY2xlYXJQcm9kdWN0SW50ZXJlc3RzKCk6IHZvaWQ7XHJcbn1cclxuIl19