import { Actions } from '@ngrx/effects';
import { Observable } from 'rxjs';
import { GlobalMessageService } from '../../../global-message/index';
import { UserAddressConnector } from '../../connectors/address/user-address.connector';
import { UserAddressService } from '../../facade/user-address.service';
import { UserActions } from '../actions/index';
import * as ɵngcc0 from '@angular/core';
export declare class UserAddressesEffects {
    private actions$;
    private userAddressConnector;
    private userAddressService;
    private messageService;
    loadUserAddresses$: Observable<UserActions.UserAddressesAction>;
    addUserAddress$: Observable<UserActions.UserAddressesAction>;
    updateUserAddress$: Observable<UserActions.UserAddressesAction>;
    deleteUserAddress$: Observable<UserActions.UserAddressesAction>;
    /**
     *  Reload addresses and notify about add success
     */
    showGlobalMessageOnAddSuccess$: Observable<never>;
    /**
     *  Reload addresses and notify about update success
     */
    showGlobalMessageOnUpdateSuccess$: Observable<never>;
    /**
     *  Reload addresses and notify about delete success
     */
    showGlobalMessageOnDeleteSuccess$: Observable<never>;
    constructor(actions$: Actions, userAddressConnector: UserAddressConnector, userAddressService: UserAddressService, messageService: GlobalMessageService);
    /**
     * Show global confirmation message with provided text
     */
    private showGlobalMessage;
    private loadAddresses;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserAddressesEffects, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<UserAddressesEffects>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1hZGRyZXNzZXMuZWZmZWN0LmQudHMiLCJzb3VyY2VzIjpbInVzZXItYWRkcmVzc2VzLmVmZmVjdC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9ucyB9IGZyb20gJ0BuZ3J4L2VmZmVjdHMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEdsb2JhbE1lc3NhZ2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vZ2xvYmFsLW1lc3NhZ2UvaW5kZXgnO1xyXG5pbXBvcnQgeyBVc2VyQWRkcmVzc0Nvbm5lY3RvciB9IGZyb20gJy4uLy4uL2Nvbm5lY3RvcnMvYWRkcmVzcy91c2VyLWFkZHJlc3MuY29ubmVjdG9yJztcclxuaW1wb3J0IHsgVXNlckFkZHJlc3NTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vZmFjYWRlL3VzZXItYWRkcmVzcy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgVXNlckFjdGlvbnMgfSBmcm9tICcuLi9hY3Rpb25zL2luZGV4JztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVXNlckFkZHJlc3Nlc0VmZmVjdHMge1xyXG4gICAgcHJpdmF0ZSBhY3Rpb25zJDtcclxuICAgIHByaXZhdGUgdXNlckFkZHJlc3NDb25uZWN0b3I7XHJcbiAgICBwcml2YXRlIHVzZXJBZGRyZXNzU2VydmljZTtcclxuICAgIHByaXZhdGUgbWVzc2FnZVNlcnZpY2U7XHJcbiAgICBsb2FkVXNlckFkZHJlc3NlcyQ6IE9ic2VydmFibGU8VXNlckFjdGlvbnMuVXNlckFkZHJlc3Nlc0FjdGlvbj47XHJcbiAgICBhZGRVc2VyQWRkcmVzcyQ6IE9ic2VydmFibGU8VXNlckFjdGlvbnMuVXNlckFkZHJlc3Nlc0FjdGlvbj47XHJcbiAgICB1cGRhdGVVc2VyQWRkcmVzcyQ6IE9ic2VydmFibGU8VXNlckFjdGlvbnMuVXNlckFkZHJlc3Nlc0FjdGlvbj47XHJcbiAgICBkZWxldGVVc2VyQWRkcmVzcyQ6IE9ic2VydmFibGU8VXNlckFjdGlvbnMuVXNlckFkZHJlc3Nlc0FjdGlvbj47XHJcbiAgICAvKipcclxuICAgICAqICBSZWxvYWQgYWRkcmVzc2VzIGFuZCBub3RpZnkgYWJvdXQgYWRkIHN1Y2Nlc3NcclxuICAgICAqL1xyXG4gICAgc2hvd0dsb2JhbE1lc3NhZ2VPbkFkZFN1Y2Nlc3MkOiBPYnNlcnZhYmxlPG5ldmVyPjtcclxuICAgIC8qKlxyXG4gICAgICogIFJlbG9hZCBhZGRyZXNzZXMgYW5kIG5vdGlmeSBhYm91dCB1cGRhdGUgc3VjY2Vzc1xyXG4gICAgICovXHJcbiAgICBzaG93R2xvYmFsTWVzc2FnZU9uVXBkYXRlU3VjY2VzcyQ6IE9ic2VydmFibGU8bmV2ZXI+O1xyXG4gICAgLyoqXHJcbiAgICAgKiAgUmVsb2FkIGFkZHJlc3NlcyBhbmQgbm90aWZ5IGFib3V0IGRlbGV0ZSBzdWNjZXNzXHJcbiAgICAgKi9cclxuICAgIHNob3dHbG9iYWxNZXNzYWdlT25EZWxldGVTdWNjZXNzJDogT2JzZXJ2YWJsZTxuZXZlcj47XHJcbiAgICBjb25zdHJ1Y3RvcihhY3Rpb25zJDogQWN0aW9ucywgdXNlckFkZHJlc3NDb25uZWN0b3I6IFVzZXJBZGRyZXNzQ29ubmVjdG9yLCB1c2VyQWRkcmVzc1NlcnZpY2U6IFVzZXJBZGRyZXNzU2VydmljZSwgbWVzc2FnZVNlcnZpY2U6IEdsb2JhbE1lc3NhZ2VTZXJ2aWNlKTtcclxuICAgIC8qKlxyXG4gICAgICogU2hvdyBnbG9iYWwgY29uZmlybWF0aW9uIG1lc3NhZ2Ugd2l0aCBwcm92aWRlZCB0ZXh0XHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc2hvd0dsb2JhbE1lc3NhZ2U7XHJcbiAgICBwcml2YXRlIGxvYWRBZGRyZXNzZXM7XHJcbn1cclxuIl19