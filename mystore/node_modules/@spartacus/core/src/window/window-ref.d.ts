import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class WindowRef {
    readonly document: Document;
    constructor(document: any);
    get nativeWindow(): Window;
    get sessionStorage(): Storage;
    get localStorage(): Storage;
    /**
     * Returns an observable for the window resize event and emits an event
     * every 300ms in case of resizing. An event is simulated initially.
     *
     * If there's no window object availale (i.e. in SSR), a null value is emitted.
     */
    get resize$(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<WindowRef, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luZG93LXJlZi5kLnRzIiwic291cmNlcyI6WyJ3aW5kb3ctcmVmLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFdpbmRvd1JlZiB7XHJcbiAgICByZWFkb25seSBkb2N1bWVudDogRG9jdW1lbnQ7XHJcbiAgICBjb25zdHJ1Y3Rvcihkb2N1bWVudDogYW55KTtcclxuICAgIGdldCBuYXRpdmVXaW5kb3coKTogV2luZG93O1xyXG4gICAgZ2V0IHNlc3Npb25TdG9yYWdlKCk6IFN0b3JhZ2U7XHJcbiAgICBnZXQgbG9jYWxTdG9yYWdlKCk6IFN0b3JhZ2U7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgYW4gb2JzZXJ2YWJsZSBmb3IgdGhlIHdpbmRvdyByZXNpemUgZXZlbnQgYW5kIGVtaXRzIGFuIGV2ZW50XHJcbiAgICAgKiBldmVyeSAzMDBtcyBpbiBjYXNlIG9mIHJlc2l6aW5nLiBBbiBldmVudCBpcyBzaW11bGF0ZWQgaW5pdGlhbGx5LlxyXG4gICAgICpcclxuICAgICAqIElmIHRoZXJlJ3Mgbm8gd2luZG93IG9iamVjdCBhdmFpbGFsZSAoaS5lLiBpbiBTU1IpLCBhIG51bGwgdmFsdWUgaXMgZW1pdHRlZC5cclxuICAgICAqL1xyXG4gICAgZ2V0IHJlc2l6ZSQoKTogT2JzZXJ2YWJsZTxhbnk+O1xyXG59XHJcbiJdfQ==