import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { AsmUi, CustomerSearchOptions, CustomerSearchPage } from '../models/asm.models';
import { StateWithAsm } from '../store/asm-state';
import * as ɵngcc0 from '@angular/core';
export declare class AsmService {
    protected store: Store<StateWithAsm>;
    constructor(store: Store<StateWithAsm>);
    /**
     * Search for customers
     * @param options
     */
    customerSearch(options: CustomerSearchOptions): void;
    /**
     * Reset the customer search result data to the initial state.
     */
    customerSearchReset(): void;
    /**
     * Returns the customer search result data.
     */
    getCustomerSearchResults(): Observable<CustomerSearchPage>;
    /**
     * Returns the customer search result loading status.
     */
    getCustomerSearchResultsLoading(): Observable<boolean>;
    /**
     * Updates the state of the ASM UI
     */
    updateAsmUiState(asmUi: AsmUi): void;
    /**
     * Get the state of the ASM UI
     */
    getAsmUiState(): Observable<AsmUi>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AsmService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiYXNtLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEFzbVVpLCBDdXN0b21lclNlYXJjaE9wdGlvbnMsIEN1c3RvbWVyU2VhcmNoUGFnZSB9IGZyb20gJy4uL21vZGVscy9hc20ubW9kZWxzJztcclxuaW1wb3J0IHsgU3RhdGVXaXRoQXNtIH0gZnJvbSAnLi4vc3RvcmUvYXNtLXN0YXRlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXNtU2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgc3RvcmU6IFN0b3JlPFN0YXRlV2l0aEFzbT47XHJcbiAgICBjb25zdHJ1Y3RvcihzdG9yZTogU3RvcmU8U3RhdGVXaXRoQXNtPik7XHJcbiAgICAvKipcclxuICAgICAqIFNlYXJjaCBmb3IgY3VzdG9tZXJzXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uc1xyXG4gICAgICovXHJcbiAgICBjdXN0b21lclNlYXJjaChvcHRpb25zOiBDdXN0b21lclNlYXJjaE9wdGlvbnMpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXNldCB0aGUgY3VzdG9tZXIgc2VhcmNoIHJlc3VsdCBkYXRhIHRvIHRoZSBpbml0aWFsIHN0YXRlLlxyXG4gICAgICovXHJcbiAgICBjdXN0b21lclNlYXJjaFJlc2V0KCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGN1c3RvbWVyIHNlYXJjaCByZXN1bHQgZGF0YS5cclxuICAgICAqL1xyXG4gICAgZ2V0Q3VzdG9tZXJTZWFyY2hSZXN1bHRzKCk6IE9ic2VydmFibGU8Q3VzdG9tZXJTZWFyY2hQYWdlPjtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY3VzdG9tZXIgc2VhcmNoIHJlc3VsdCBsb2FkaW5nIHN0YXR1cy5cclxuICAgICAqL1xyXG4gICAgZ2V0Q3VzdG9tZXJTZWFyY2hSZXN1bHRzTG9hZGluZygpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVcGRhdGVzIHRoZSBzdGF0ZSBvZiB0aGUgQVNNIFVJXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZUFzbVVpU3RhdGUoYXNtVWk6IEFzbVVpKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogR2V0IHRoZSBzdGF0ZSBvZiB0aGUgQVNNIFVJXHJcbiAgICAgKi9cclxuICAgIGdldEFzbVVpU3RhdGUoKTogT2JzZXJ2YWJsZTxBc21VaT47XHJcbn1cclxuIl19