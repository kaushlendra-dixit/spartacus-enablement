/**
 * The split-view component supports an unlimited number of nested views. Nested views are rendered
 * next to each other. The views can be rendered next to each other, but the max number of visible
 * views can be limisted as well. This is configurable in the CSS layer, so that the max number of views
 * per split-view can be different for each component.
 *
 * The basic structure of the split-view component is shown below:
 *
 *
 * ```
 * <cx-split-view>
 * </cx-split-view>
 * ```
 *
 * The UX pattern used for the split-view is driven by an initial view, which gets splitted into
 * more views as soon as the user starts interacting with the initial and subsequantial views.
 * The views can be driven by routes, which means that you can navigate through the splitted views
 * by using the browser history as well as share or bookmark splitted views.
 *
 * The UI is implemented in the style layer, with only a few generic style rules. Most of the split
 * view style is driven by CSS properties, so that alternative split-view styles can be introduced
 * per page or component.
 *
 * The max number of views per split-view on mobile is limited to 1 by default, where as on tablet
 * (and higher) it is set to 2. Spartacus has a pretty narrow layout, which is why 2 is maximum,
 * but customers could alter the layout to bring in more views in the same split-view at the time.
 *
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './split/split-view.component';
import * as ɵngcc2 from './view/view.component';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/router';
export declare class SplitViewModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SplitViewModule, [typeof ɵngcc1.SplitViewComponent, typeof ɵngcc2.ViewComponent], [typeof ɵngcc3.CommonModule, typeof ɵngcc4.RouterModule], [typeof ɵngcc1.SplitViewComponent, typeof ɵngcc2.ViewComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SplitViewModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtdmlldy5tb2R1bGUuZC50cyIsInNvdXJjZXMiOlsic3BsaXQtdmlldy5tb2R1bGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoZSBzcGxpdC12aWV3IGNvbXBvbmVudCBzdXBwb3J0cyBhbiB1bmxpbWl0ZWQgbnVtYmVyIG9mIG5lc3RlZCB2aWV3cy4gTmVzdGVkIHZpZXdzIGFyZSByZW5kZXJlZFxyXG4gKiBuZXh0IHRvIGVhY2ggb3RoZXIuIFRoZSB2aWV3cyBjYW4gYmUgcmVuZGVyZWQgbmV4dCB0byBlYWNoIG90aGVyLCBidXQgdGhlIG1heCBudW1iZXIgb2YgdmlzaWJsZVxyXG4gKiB2aWV3cyBjYW4gYmUgbGltaXN0ZWQgYXMgd2VsbC4gVGhpcyBpcyBjb25maWd1cmFibGUgaW4gdGhlIENTUyBsYXllciwgc28gdGhhdCB0aGUgbWF4IG51bWJlciBvZiB2aWV3c1xyXG4gKiBwZXIgc3BsaXQtdmlldyBjYW4gYmUgZGlmZmVyZW50IGZvciBlYWNoIGNvbXBvbmVudC5cclxuICpcclxuICogVGhlIGJhc2ljIHN0cnVjdHVyZSBvZiB0aGUgc3BsaXQtdmlldyBjb21wb25lbnQgaXMgc2hvd24gYmVsb3c6XHJcbiAqXHJcbiAqXHJcbiAqIGBgYFxyXG4gKiA8Y3gtc3BsaXQtdmlldz5cclxuICogPC9jeC1zcGxpdC12aWV3PlxyXG4gKiBgYGBcclxuICpcclxuICogVGhlIFVYIHBhdHRlcm4gdXNlZCBmb3IgdGhlIHNwbGl0LXZpZXcgaXMgZHJpdmVuIGJ5IGFuIGluaXRpYWwgdmlldywgd2hpY2ggZ2V0cyBzcGxpdHRlZCBpbnRvXHJcbiAqIG1vcmUgdmlld3MgYXMgc29vbiBhcyB0aGUgdXNlciBzdGFydHMgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgaW5pdGlhbCBhbmQgc3Vic2VxdWFudGlhbCB2aWV3cy5cclxuICogVGhlIHZpZXdzIGNhbiBiZSBkcml2ZW4gYnkgcm91dGVzLCB3aGljaCBtZWFucyB0aGF0IHlvdSBjYW4gbmF2aWdhdGUgdGhyb3VnaCB0aGUgc3BsaXR0ZWQgdmlld3NcclxuICogYnkgdXNpbmcgdGhlIGJyb3dzZXIgaGlzdG9yeSBhcyB3ZWxsIGFzIHNoYXJlIG9yIGJvb2ttYXJrIHNwbGl0dGVkIHZpZXdzLlxyXG4gKlxyXG4gKiBUaGUgVUkgaXMgaW1wbGVtZW50ZWQgaW4gdGhlIHN0eWxlIGxheWVyLCB3aXRoIG9ubHkgYSBmZXcgZ2VuZXJpYyBzdHlsZSBydWxlcy4gTW9zdCBvZiB0aGUgc3BsaXRcclxuICogdmlldyBzdHlsZSBpcyBkcml2ZW4gYnkgQ1NTIHByb3BlcnRpZXMsIHNvIHRoYXQgYWx0ZXJuYXRpdmUgc3BsaXQtdmlldyBzdHlsZXMgY2FuIGJlIGludHJvZHVjZWRcclxuICogcGVyIHBhZ2Ugb3IgY29tcG9uZW50LlxyXG4gKlxyXG4gKiBUaGUgbWF4IG51bWJlciBvZiB2aWV3cyBwZXIgc3BsaXQtdmlldyBvbiBtb2JpbGUgaXMgbGltaXRlZCB0byAxIGJ5IGRlZmF1bHQsIHdoZXJlIGFzIG9uIHRhYmxldFxyXG4gKiAoYW5kIGhpZ2hlcikgaXQgaXMgc2V0IHRvIDIuIFNwYXJ0YWN1cyBoYXMgYSBwcmV0dHkgbmFycm93IGxheW91dCwgd2hpY2ggaXMgd2h5IDIgaXMgbWF4aW11bSxcclxuICogYnV0IGN1c3RvbWVycyBjb3VsZCBhbHRlciB0aGUgbGF5b3V0IHRvIGJyaW5nIGluIG1vcmUgdmlld3MgaW4gdGhlIHNhbWUgc3BsaXQtdmlldyBhdCB0aGUgdGltZS5cclxuICpcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNwbGl0Vmlld01vZHVsZSB7XHJcbn1cclxuIl19