import { EventEmitter, OnInit } from '@angular/core';
import { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';
import * as ɵngcc0 from '@angular/core';
export interface CardAction {
    event: string;
    name: string;
}
export interface CardLinkAction {
    link: string;
    name: string;
}
export interface Card {
    header?: string;
    title?: string;
    textBold?: string;
    text?: Array<string>;
    img?: string;
    actions?: Array<CardAction | CardLinkAction>;
    deleteMsg?: string;
}
export declare class CardComponent implements OnInit {
    iconTypes: typeof ICON_TYPE;
    deleteCard: EventEmitter<number>;
    setDefaultCard: EventEmitter<number>;
    sendCard: EventEmitter<number>;
    editCard: EventEmitter<number>;
    cancelCard: EventEmitter<number>;
    border: boolean;
    editMode: boolean;
    isDefault: boolean;
    content: Card;
    fitToContainer: boolean;
    setEditMode(): void;
    cancelEdit(): void;
    delete(): void;
    setDefault(): void;
    send(): void;
    edit(): void;
    constructor();
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CardComponent, "cx-card", never, { "border": "border"; "editMode": "editMode"; "isDefault": "isDefault"; "fitToContainer": "fitToContainer"; "content": "content"; }, { "deleteCard": "deleteCard"; "setDefaultCard": "setDefaultCard"; "sendCard": "sendCard"; "editCard": "editCard"; "cancelCard": "cancelCard"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IElDT05fVFlQRSB9IGZyb20gJy4uLy4uLy4uL2Ntcy1jb21wb25lbnRzL21pc2MvaWNvbi9pY29uLm1vZGVsJztcclxuZXhwb3J0IGludGVyZmFjZSBDYXJkQWN0aW9uIHtcclxuICAgIGV2ZW50OiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBDYXJkTGlua0FjdGlvbiB7XHJcbiAgICBsaW5rOiBzdHJpbmc7XHJcbiAgICBuYW1lOiBzdHJpbmc7XHJcbn1cclxuZXhwb3J0IGludGVyZmFjZSBDYXJkIHtcclxuICAgIGhlYWRlcj86IHN0cmluZztcclxuICAgIHRpdGxlPzogc3RyaW5nO1xyXG4gICAgdGV4dEJvbGQ/OiBzdHJpbmc7XHJcbiAgICB0ZXh0PzogQXJyYXk8c3RyaW5nPjtcclxuICAgIGltZz86IHN0cmluZztcclxuICAgIGFjdGlvbnM/OiBBcnJheTxDYXJkQWN0aW9uIHwgQ2FyZExpbmtBY3Rpb24+O1xyXG4gICAgZGVsZXRlTXNnPzogc3RyaW5nO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhcmRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgaWNvblR5cGVzOiB0eXBlb2YgSUNPTl9UWVBFO1xyXG4gICAgZGVsZXRlQ2FyZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBzZXREZWZhdWx0Q2FyZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBzZW5kQ2FyZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBlZGl0Q2FyZDogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBjYW5jZWxDYXJkOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuICAgIGJvcmRlcjogYm9vbGVhbjtcclxuICAgIGVkaXRNb2RlOiBib29sZWFuO1xyXG4gICAgaXNEZWZhdWx0OiBib29sZWFuO1xyXG4gICAgY29udGVudDogQ2FyZDtcclxuICAgIGZpdFRvQ29udGFpbmVyOiBib29sZWFuO1xyXG4gICAgc2V0RWRpdE1vZGUoKTogdm9pZDtcclxuICAgIGNhbmNlbEVkaXQoKTogdm9pZDtcclxuICAgIGRlbGV0ZSgpOiB2b2lkO1xyXG4gICAgc2V0RGVmYXVsdCgpOiB2b2lkO1xyXG4gICAgc2VuZCgpOiB2b2lkO1xyXG4gICAgZWRpdCgpOiB2b2lkO1xyXG4gICAgY29uc3RydWN0b3IoKTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbn1cclxuIl19