import { ComponentRef, ElementRef, Injector, ViewContainerRef } from '@angular/core';
import { ComponentHandler } from '../handlers/component-handler';
import { CmsComponentMapping } from '@spartacus/core';
import { Observable } from 'rxjs';
/**
 * Responsible for obtaining component handler for specified component mapping
 */
import * as ɵngcc0 from '@angular/core';
export declare class ComponentHandlerService {
    protected handlers: ComponentHandler[];
    constructor(handlers: ComponentHandler[]);
    protected invalidMappings: Set<CmsComponentMapping>;
    /**
     * Get best matching component handler
     *
     * @param componentMapping
     */
    protected resolve(componentMapping: CmsComponentMapping): ComponentHandler;
    /**
     * Get launcher for specified component mapping
     *
     * @param componentMapping
     * @param viewContainerRef
     * @param elementInjector
     */
    getLauncher(componentMapping: CmsComponentMapping, viewContainerRef: ViewContainerRef, elementInjector?: Injector): Observable<{
        elementRef: ElementRef;
        componentRef?: ComponentRef<any>;
    }>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ComponentHandlerService, [{ optional: true; }]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWhhbmRsZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJjb21wb25lbnQtaGFuZGxlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50UmVmLCBFbGVtZW50UmVmLCBJbmplY3RvciwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21wb25lbnRIYW5kbGVyIH0gZnJvbSAnLi4vaGFuZGxlcnMvY29tcG9uZW50LWhhbmRsZXInO1xyXG5pbXBvcnQgeyBDbXNDb21wb25lbnRNYXBwaW5nIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG4vKipcclxuICogUmVzcG9uc2libGUgZm9yIG9idGFpbmluZyBjb21wb25lbnQgaGFuZGxlciBmb3Igc3BlY2lmaWVkIGNvbXBvbmVudCBtYXBwaW5nXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb21wb25lbnRIYW5kbGVyU2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgaGFuZGxlcnM6IENvbXBvbmVudEhhbmRsZXJbXTtcclxuICAgIGNvbnN0cnVjdG9yKGhhbmRsZXJzOiBDb21wb25lbnRIYW5kbGVyW10pO1xyXG4gICAgcHJvdGVjdGVkIGludmFsaWRNYXBwaW5nczogU2V0PENtc0NvbXBvbmVudE1hcHBpbmc+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgYmVzdCBtYXRjaGluZyBjb21wb25lbnQgaGFuZGxlclxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb21wb25lbnRNYXBwaW5nXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCByZXNvbHZlKGNvbXBvbmVudE1hcHBpbmc6IENtc0NvbXBvbmVudE1hcHBpbmcpOiBDb21wb25lbnRIYW5kbGVyO1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgbGF1bmNoZXIgZm9yIHNwZWNpZmllZCBjb21wb25lbnQgbWFwcGluZ1xyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb21wb25lbnRNYXBwaW5nXHJcbiAgICAgKiBAcGFyYW0gdmlld0NvbnRhaW5lclJlZlxyXG4gICAgICogQHBhcmFtIGVsZW1lbnRJbmplY3RvclxyXG4gICAgICovXHJcbiAgICBnZXRMYXVuY2hlcihjb21wb25lbnRNYXBwaW5nOiBDbXNDb21wb25lbnRNYXBwaW5nLCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBlbGVtZW50SW5qZWN0b3I/OiBJbmplY3Rvcik6IE9ic2VydmFibGU8e1xyXG4gICAgICAgIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY7XHJcbiAgICAgICAgY29tcG9uZW50UmVmPzogQ29tcG9uZW50UmVmPGFueT47XHJcbiAgICB9PjtcclxufVxyXG4iXX0=