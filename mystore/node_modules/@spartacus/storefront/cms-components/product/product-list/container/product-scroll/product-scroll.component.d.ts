import { OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ProductSearchPage } from '@spartacus/core';
import { ViewModes } from '../../product-view/product-view.component';
import { ProductListComponentService } from '../product-list-component.service';
import { ViewConfig } from '../../../../../shared/config/view-config';
import * as ɵngcc0 from '@angular/core';
export declare class ProductScrollComponent implements OnDestroy {
    private productListComponentService;
    private ref;
    private subscription;
    set setConfig(inputConfig: ViewConfig);
    model: ProductSearchPage;
    set setModel(inputModel: ProductSearchPage);
    inputViewMode: ViewModes;
    set setViewMode(inputViewMode: ViewModes);
    viewMode: ViewModes;
    productLimit: number;
    maxProducts: number;
    ViewModes: typeof ViewModes;
    appendProducts: boolean;
    resetList: boolean;
    isMaxProducts: boolean;
    isLastPage: boolean;
    isEmpty: boolean;
    constructor(productListComponentService: ProductListComponentService, ref: ChangeDetectorRef);
    scrollPage(pageNumber: number): void;
    loadNextPage(pageNumber: number): void;
    scrollToTop(): void;
    private setComponentConfigurations;
    private infiniteScrollOperations;
    private resetListOnViewModeChange;
    private setConditions;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProductScrollComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ProductScrollComponent, "cx-product-scroll", never, { "setConfig": "scrollConfig"; "setModel": "model"; "setViewMode": "inputViewMode"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zY3JvbGwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInByb2R1Y3Qtc2Nyb2xsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uRGVzdHJveSwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUHJvZHVjdFNlYXJjaFBhZ2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBWaWV3TW9kZXMgfSBmcm9tICcuLi8uLi9wcm9kdWN0LXZpZXcvcHJvZHVjdC12aWV3LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZSB9IGZyb20gJy4uL3Byb2R1Y3QtbGlzdC1jb21wb25lbnQuc2VydmljZSc7XHJcbmltcG9ydCB7IFZpZXdDb25maWcgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zaGFyZWQvY29uZmlnL3ZpZXctY29uZmlnJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUHJvZHVjdFNjcm9sbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICBwcml2YXRlIHByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZTtcclxuICAgIHByaXZhdGUgcmVmO1xyXG4gICAgcHJpdmF0ZSBzdWJzY3JpcHRpb247XHJcbiAgICBzZXQgc2V0Q29uZmlnKGlucHV0Q29uZmlnOiBWaWV3Q29uZmlnKTtcclxuICAgIG1vZGVsOiBQcm9kdWN0U2VhcmNoUGFnZTtcclxuICAgIHNldCBzZXRNb2RlbChpbnB1dE1vZGVsOiBQcm9kdWN0U2VhcmNoUGFnZSk7XHJcbiAgICBpbnB1dFZpZXdNb2RlOiBWaWV3TW9kZXM7XHJcbiAgICBzZXQgc2V0Vmlld01vZGUoaW5wdXRWaWV3TW9kZTogVmlld01vZGVzKTtcclxuICAgIHZpZXdNb2RlOiBWaWV3TW9kZXM7XHJcbiAgICBwcm9kdWN0TGltaXQ6IG51bWJlcjtcclxuICAgIG1heFByb2R1Y3RzOiBudW1iZXI7XHJcbiAgICBWaWV3TW9kZXM6IHR5cGVvZiBWaWV3TW9kZXM7XHJcbiAgICBhcHBlbmRQcm9kdWN0czogYm9vbGVhbjtcclxuICAgIHJlc2V0TGlzdDogYm9vbGVhbjtcclxuICAgIGlzTWF4UHJvZHVjdHM6IGJvb2xlYW47XHJcbiAgICBpc0xhc3RQYWdlOiBib29sZWFuO1xyXG4gICAgaXNFbXB0eTogYm9vbGVhbjtcclxuICAgIGNvbnN0cnVjdG9yKHByb2R1Y3RMaXN0Q29tcG9uZW50U2VydmljZTogUHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlLCByZWY6IENoYW5nZURldGVjdG9yUmVmKTtcclxuICAgIHNjcm9sbFBhZ2UocGFnZU51bWJlcjogbnVtYmVyKTogdm9pZDtcclxuICAgIGxvYWROZXh0UGFnZShwYWdlTnVtYmVyOiBudW1iZXIpOiB2b2lkO1xyXG4gICAgc2Nyb2xsVG9Ub3AoKTogdm9pZDtcclxuICAgIHByaXZhdGUgc2V0Q29tcG9uZW50Q29uZmlndXJhdGlvbnM7XHJcbiAgICBwcml2YXRlIGluZmluaXRlU2Nyb2xsT3BlcmF0aW9ucztcclxuICAgIHByaXZhdGUgcmVzZXRMaXN0T25WaWV3TW9kZUNoYW5nZTtcclxuICAgIHByaXZhdGUgc2V0Q29uZGl0aW9ucztcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuIl19