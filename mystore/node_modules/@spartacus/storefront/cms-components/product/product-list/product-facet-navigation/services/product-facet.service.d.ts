import { ActivatedRouterStateSnapshot, ProductSearchPage, RoutingService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { ProductListComponentService } from '../../container/product-list-component.service';
import { FacetList } from '../facet.model';
/**
 * Provides access to all the facets and active facets for the Product Listing Page.
 */
import * as ɵngcc0 from '@angular/core';
export declare class ProductFacetService {
    protected routing: RoutingService;
    protected productListComponentService: ProductListComponentService;
    protected readonly routeState$: Observable<ActivatedRouterStateSnapshot>;
    protected readonly searchResult$: Observable<ProductSearchPage>;
    constructor(routing: RoutingService, productListComponentService: ProductListComponentService);
    /**
     * Observes the facets and active facets for the given page. The facet data
     * is provided in a `FacetList`.
     */
    readonly facetList$: Observable<FacetList>;
    /**
     * Filters the current result by verifying if the result is related to the page.
     * This is done to avoid a combination of the next page and the current search results.
     */
    protected filterForPage(state: ActivatedRouterStateSnapshot, page: ProductSearchPage): boolean;
    private mapResults;
    /**
     * filter breadcrumbs which are not actively selected
     * but coming from the route navigation
     */
    private filterBreadcrumbs;
    /**
     * Indicates whether the breadcrumb is related to navigation parameters,
     * since either the category or brand code should match those codes.
     */
    private hasBreadcrumb;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProductFacetService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1mYWNldC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInByb2R1Y3QtZmFjZXQuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGl2YXRlZFJvdXRlclN0YXRlU25hcHNob3QsIFByb2R1Y3RTZWFyY2hQYWdlLCBSb3V0aW5nU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgUHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY29udGFpbmVyL3Byb2R1Y3QtbGlzdC1jb21wb25lbnQuc2VydmljZSc7XHJcbmltcG9ydCB7IEZhY2V0TGlzdCB9IGZyb20gJy4uL2ZhY2V0Lm1vZGVsJztcclxuLyoqXHJcbiAqIFByb3ZpZGVzIGFjY2VzcyB0byBhbGwgdGhlIGZhY2V0cyBhbmQgYWN0aXZlIGZhY2V0cyBmb3IgdGhlIFByb2R1Y3QgTGlzdGluZyBQYWdlLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUHJvZHVjdEZhY2V0U2VydmljZSB7XHJcbiAgICBwcm90ZWN0ZWQgcm91dGluZzogUm91dGluZ1NlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgcHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlOiBQcm9kdWN0TGlzdENvbXBvbmVudFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgcm91dGVTdGF0ZSQ6IE9ic2VydmFibGU8QWN0aXZhdGVkUm91dGVyU3RhdGVTbmFwc2hvdD47XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgc2VhcmNoUmVzdWx0JDogT2JzZXJ2YWJsZTxQcm9kdWN0U2VhcmNoUGFnZT47XHJcbiAgICBjb25zdHJ1Y3Rvcihyb3V0aW5nOiBSb3V0aW5nU2VydmljZSwgcHJvZHVjdExpc3RDb21wb25lbnRTZXJ2aWNlOiBQcm9kdWN0TGlzdENvbXBvbmVudFNlcnZpY2UpO1xyXG4gICAgLyoqXHJcbiAgICAgKiBPYnNlcnZlcyB0aGUgZmFjZXRzIGFuZCBhY3RpdmUgZmFjZXRzIGZvciB0aGUgZ2l2ZW4gcGFnZS4gVGhlIGZhY2V0IGRhdGFcclxuICAgICAqIGlzIHByb3ZpZGVkIGluIGEgYEZhY2V0TGlzdGAuXHJcbiAgICAgKi9cclxuICAgIHJlYWRvbmx5IGZhY2V0TGlzdCQ6IE9ic2VydmFibGU8RmFjZXRMaXN0PjtcclxuICAgIC8qKlxyXG4gICAgICogRmlsdGVycyB0aGUgY3VycmVudCByZXN1bHQgYnkgdmVyaWZ5aW5nIGlmIHRoZSByZXN1bHQgaXMgcmVsYXRlZCB0byB0aGUgcGFnZS5cclxuICAgICAqIFRoaXMgaXMgZG9uZSB0byBhdm9pZCBhIGNvbWJpbmF0aW9uIG9mIHRoZSBuZXh0IHBhZ2UgYW5kIHRoZSBjdXJyZW50IHNlYXJjaCByZXN1bHRzLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgZmlsdGVyRm9yUGFnZShzdGF0ZTogQWN0aXZhdGVkUm91dGVyU3RhdGVTbmFwc2hvdCwgcGFnZTogUHJvZHVjdFNlYXJjaFBhZ2UpOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBtYXBSZXN1bHRzO1xyXG4gICAgLyoqXHJcbiAgICAgKiBmaWx0ZXIgYnJlYWRjcnVtYnMgd2hpY2ggYXJlIG5vdCBhY3RpdmVseSBzZWxlY3RlZFxyXG4gICAgICogYnV0IGNvbWluZyBmcm9tIHRoZSByb3V0ZSBuYXZpZ2F0aW9uXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgZmlsdGVyQnJlYWRjcnVtYnM7XHJcbiAgICAvKipcclxuICAgICAqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBicmVhZGNydW1iIGlzIHJlbGF0ZWQgdG8gbmF2aWdhdGlvbiBwYXJhbWV0ZXJzLFxyXG4gICAgICogc2luY2UgZWl0aGVyIHRoZSBjYXRlZ29yeSBvciBicmFuZCBjb2RlIHNob3VsZCBtYXRjaCB0aG9zZSBjb2Rlcy5cclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBoYXNCcmVhZGNydW1iO1xyXG59XHJcbiJdfQ==