import { CanActivate } from '@angular/router';
import { AuthService, CmsService, ProtectedRoutesService, RoutingService, SemanticPathService } from '@spartacus/core';
import { Observable } from 'rxjs';
/**
 * Guards the _logout_ route.
 *
 * Takes care of routing the user to a logout page (if available) or redirects to
 * the homepage. If the homepage is protected, the user is redirected
 * to the login route instead.
 */
import * as ɵngcc0 from '@angular/core';
export declare class LogoutGuard implements CanActivate {
    protected auth: AuthService;
    protected cms: CmsService;
    protected routing: RoutingService;
    protected semanticPathService: SemanticPathService;
    protected protectedRoutes: ProtectedRoutesService;
    constructor(auth: AuthService, cms: CmsService, routing: RoutingService, semanticPathService: SemanticPathService, protectedRoutes: ProtectedRoutesService);
    canActivate(): Observable<any>;
    /**
     * Whenever there is no specific "logout" page configured in the CMS,
     * we redirect after the user is logged out.
     *
     * The user gets redirected to the homepage, unless the homepage is protected
     * (in case of a closed shop). We'll redirect to the login page instead.
     */
    protected redirect(): void;
    /**
     * Log user out.
     *
     * This is delegated to the `AuthService`.
     */
    protected logout(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LogoutGuard, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nb3V0LWd1YXJkLmQudHMiLCJzb3VyY2VzIjpbImxvZ291dC1ndWFyZC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FuQWN0aXZhdGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBBdXRoU2VydmljZSwgQ21zU2VydmljZSwgUHJvdGVjdGVkUm91dGVzU2VydmljZSwgUm91dGluZ1NlcnZpY2UsIFNlbWFudGljUGF0aFNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbi8qKlxyXG4gKiBHdWFyZHMgdGhlIF9sb2dvdXRfIHJvdXRlLlxyXG4gKlxyXG4gKiBUYWtlcyBjYXJlIG9mIHJvdXRpbmcgdGhlIHVzZXIgdG8gYSBsb2dvdXQgcGFnZSAoaWYgYXZhaWxhYmxlKSBvciByZWRpcmVjdHMgdG9cclxuICogdGhlIGhvbWVwYWdlLiBJZiB0aGUgaG9tZXBhZ2UgaXMgcHJvdGVjdGVkLCB0aGUgdXNlciBpcyByZWRpcmVjdGVkXHJcbiAqIHRvIHRoZSBsb2dpbiByb3V0ZSBpbnN0ZWFkLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTG9nb3V0R3VhcmQgaW1wbGVtZW50cyBDYW5BY3RpdmF0ZSB7XHJcbiAgICBwcm90ZWN0ZWQgYXV0aDogQXV0aFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgY21zOiBDbXNTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIHJvdXRpbmc6IFJvdXRpbmdTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIHNlbWFudGljUGF0aFNlcnZpY2U6IFNlbWFudGljUGF0aFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgcHJvdGVjdGVkUm91dGVzOiBQcm90ZWN0ZWRSb3V0ZXNTZXJ2aWNlO1xyXG4gICAgY29uc3RydWN0b3IoYXV0aDogQXV0aFNlcnZpY2UsIGNtczogQ21zU2VydmljZSwgcm91dGluZzogUm91dGluZ1NlcnZpY2UsIHNlbWFudGljUGF0aFNlcnZpY2U6IFNlbWFudGljUGF0aFNlcnZpY2UsIHByb3RlY3RlZFJvdXRlczogUHJvdGVjdGVkUm91dGVzU2VydmljZSk7XHJcbiAgICBjYW5BY3RpdmF0ZSgpOiBPYnNlcnZhYmxlPGFueT47XHJcbiAgICAvKipcclxuICAgICAqIFdoZW5ldmVyIHRoZXJlIGlzIG5vIHNwZWNpZmljIFwibG9nb3V0XCIgcGFnZSBjb25maWd1cmVkIGluIHRoZSBDTVMsXHJcbiAgICAgKiB3ZSByZWRpcmVjdCBhZnRlciB0aGUgdXNlciBpcyBsb2dnZWQgb3V0LlxyXG4gICAgICpcclxuICAgICAqIFRoZSB1c2VyIGdldHMgcmVkaXJlY3RlZCB0byB0aGUgaG9tZXBhZ2UsIHVubGVzcyB0aGUgaG9tZXBhZ2UgaXMgcHJvdGVjdGVkXHJcbiAgICAgKiAoaW4gY2FzZSBvZiBhIGNsb3NlZCBzaG9wKS4gV2UnbGwgcmVkaXJlY3QgdG8gdGhlIGxvZ2luIHBhZ2UgaW5zdGVhZC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHJlZGlyZWN0KCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIExvZyB1c2VyIG91dC5cclxuICAgICAqXHJcbiAgICAgKiBUaGlzIGlzIGRlbGVnYXRlZCB0byB0aGUgYEF1dGhTZXJ2aWNlYC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGxvZ291dCgpOiB2b2lkO1xyXG59XHJcbiJdfQ==