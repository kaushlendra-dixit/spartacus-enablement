import { SiteContext } from '@spartacus/core';
import { Observable } from 'rxjs';
import { ICON_TYPE } from '../icon/icon.model';
import { SiteContextComponentService } from './site-context-component.service';
import { SiteContextType } from './site-context.model';
import * as ɵngcc0 from '@angular/core';
export declare class SiteContextSelectorComponent {
    private componentService;
    siteContextService: SiteContext<any>;
    iconTypes: typeof ICON_TYPE;
    /**
     * the context type can be set as an input. If the context is
     * not given, the context will be loaded from the backend.
     */
    context: SiteContextType;
    constructor(componentService: SiteContextComponentService);
    get items$(): Observable<any>;
    get activeItem$(): Observable<string>;
    set active(value: string);
    get label$(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SiteContextSelectorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SiteContextSelectorComponent, "cx-site-context-selector", never, { "context": "context"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l0ZS1jb250ZXh0LXNlbGVjdG9yLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzaXRlLWNvbnRleHQtc2VsZWN0b3IuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpdGVDb250ZXh0IH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICcuLi9pY29uL2ljb24ubW9kZWwnO1xyXG5pbXBvcnQgeyBTaXRlQ29udGV4dENvbXBvbmVudFNlcnZpY2UgfSBmcm9tICcuL3NpdGUtY29udGV4dC1jb21wb25lbnQuc2VydmljZSc7XHJcbmltcG9ydCB7IFNpdGVDb250ZXh0VHlwZSB9IGZyb20gJy4vc2l0ZS1jb250ZXh0Lm1vZGVsJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2l0ZUNvbnRleHRTZWxlY3RvckNvbXBvbmVudCB7XHJcbiAgICBwcml2YXRlIGNvbXBvbmVudFNlcnZpY2U7XHJcbiAgICBzaXRlQ29udGV4dFNlcnZpY2U6IFNpdGVDb250ZXh0PGFueT47XHJcbiAgICBpY29uVHlwZXM6IHR5cGVvZiBJQ09OX1RZUEU7XHJcbiAgICAvKipcclxuICAgICAqIHRoZSBjb250ZXh0IHR5cGUgY2FuIGJlIHNldCBhcyBhbiBpbnB1dC4gSWYgdGhlIGNvbnRleHQgaXNcclxuICAgICAqIG5vdCBnaXZlbiwgdGhlIGNvbnRleHQgd2lsbCBiZSBsb2FkZWQgZnJvbSB0aGUgYmFja2VuZC5cclxuICAgICAqL1xyXG4gICAgY29udGV4dDogU2l0ZUNvbnRleHRUeXBlO1xyXG4gICAgY29uc3RydWN0b3IoY29tcG9uZW50U2VydmljZTogU2l0ZUNvbnRleHRDb21wb25lbnRTZXJ2aWNlKTtcclxuICAgIGdldCBpdGVtcyQoKTogT2JzZXJ2YWJsZTxhbnk+O1xyXG4gICAgZ2V0IGFjdGl2ZUl0ZW0kKCk6IE9ic2VydmFibGU8c3RyaW5nPjtcclxuICAgIHNldCBhY3RpdmUodmFsdWU6IHN0cmluZyk7XHJcbiAgICBnZXQgbGFiZWwkKCk6IE9ic2VydmFibGU8YW55PjtcclxufVxyXG4iXX0=