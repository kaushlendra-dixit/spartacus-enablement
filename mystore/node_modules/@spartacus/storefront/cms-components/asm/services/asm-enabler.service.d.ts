import { Location } from '@angular/common';
import { WindowRef } from '@spartacus/core';
import { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';
/**
 * The AsmEnablerService is used to enable ASM for those scenario's
 * where it's actually used. This service is added to avoid any polution
 * of the UI and runtime performance for the ordinary production user.
 */
import * as ɵngcc0 from '@angular/core';
export declare class AsmEnablerService {
    protected location: Location;
    protected winRef: WindowRef;
    protected launchDialogService: LaunchDialogService;
    constructor(location: Location, winRef: WindowRef, launchDialogService: LaunchDialogService);
    /**
     * Loads the ASM UI if needed. The ASM UI will be added based on the
     * existence of a URL parameter or previous usage given by local storage.
     */
    load(): void;
    /**
     * Indicates whether the ASM module is enabled.
     */
    isEnabled(): boolean;
    /**
     * Indicates whether ASM is launched through the URL,
     * using the asm flag in the URL.
     */
    protected isLaunched(): boolean;
    /**
     * Evaluates local storage where we persist the usage of ASM.
     */
    protected isUsedBefore(): boolean;
    /**
     * Adds the ASM UI by using the `cx-storefront` outlet.
     */
    protected addUi(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AsmEnablerService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWVuYWJsZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJhc20tZW5hYmxlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2NhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IFdpbmRvd1JlZiB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IExhdW5jaERpYWxvZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9sYXlvdXQvbGF1bmNoLWRpYWxvZy9zZXJ2aWNlcy9sYXVuY2gtZGlhbG9nLnNlcnZpY2UnO1xyXG4vKipcclxuICogVGhlIEFzbUVuYWJsZXJTZXJ2aWNlIGlzIHVzZWQgdG8gZW5hYmxlIEFTTSBmb3IgdGhvc2Ugc2NlbmFyaW8nc1xyXG4gKiB3aGVyZSBpdCdzIGFjdHVhbGx5IHVzZWQuIFRoaXMgc2VydmljZSBpcyBhZGRlZCB0byBhdm9pZCBhbnkgcG9sdXRpb25cclxuICogb2YgdGhlIFVJIGFuZCBydW50aW1lIHBlcmZvcm1hbmNlIGZvciB0aGUgb3JkaW5hcnkgcHJvZHVjdGlvbiB1c2VyLlxyXG4gKi9cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXNtRW5hYmxlclNlcnZpY2Uge1xyXG4gICAgcHJvdGVjdGVkIGxvY2F0aW9uOiBMb2NhdGlvbjtcclxuICAgIHByb3RlY3RlZCB3aW5SZWY6IFdpbmRvd1JlZjtcclxuICAgIHByb3RlY3RlZCBsYXVuY2hEaWFsb2dTZXJ2aWNlOiBMYXVuY2hEaWFsb2dTZXJ2aWNlO1xyXG4gICAgY29uc3RydWN0b3IobG9jYXRpb246IExvY2F0aW9uLCB3aW5SZWY6IFdpbmRvd1JlZiwgbGF1bmNoRGlhbG9nU2VydmljZTogTGF1bmNoRGlhbG9nU2VydmljZSk7XHJcbiAgICAvKipcclxuICAgICAqIExvYWRzIHRoZSBBU00gVUkgaWYgbmVlZGVkLiBUaGUgQVNNIFVJIHdpbGwgYmUgYWRkZWQgYmFzZWQgb24gdGhlXHJcbiAgICAgKiBleGlzdGVuY2Ugb2YgYSBVUkwgcGFyYW1ldGVyIG9yIHByZXZpb3VzIHVzYWdlIGdpdmVuIGJ5IGxvY2FsIHN0b3JhZ2UuXHJcbiAgICAgKi9cclxuICAgIGxvYWQoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIEFTTSBtb2R1bGUgaXMgZW5hYmxlZC5cclxuICAgICAqL1xyXG4gICAgaXNFbmFibGVkKCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEluZGljYXRlcyB3aGV0aGVyIEFTTSBpcyBsYXVuY2hlZCB0aHJvdWdoIHRoZSBVUkwsXHJcbiAgICAgKiB1c2luZyB0aGUgYXNtIGZsYWcgaW4gdGhlIFVSTC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGlzTGF1bmNoZWQoKTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogRXZhbHVhdGVzIGxvY2FsIHN0b3JhZ2Ugd2hlcmUgd2UgcGVyc2lzdCB0aGUgdXNhZ2Ugb2YgQVNNLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgaXNVc2VkQmVmb3JlKCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgdGhlIEFTTSBVSSBieSB1c2luZyB0aGUgYGN4LXN0b3JlZnJvbnRgIG91dGxldC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGFkZFVpKCk6IHZvaWQ7XHJcbn1cclxuIl19