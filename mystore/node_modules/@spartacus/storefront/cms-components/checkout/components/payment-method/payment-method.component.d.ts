import { OnDestroy, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { ActiveCartService, Address, CheckoutDeliveryService, CheckoutPaymentService, CheckoutService, GlobalMessageService, PaymentDetails, RoutingService, TranslationService, UserPaymentService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { Card } from '../../../../shared/components/card/card.component';
import { ICON_TYPE } from '../../../misc/icon';
import { CheckoutConfigService } from '../../services/checkout-config.service';
import * as ɵngcc0 from '@angular/core';
export declare class PaymentMethodComponent implements OnInit, OnDestroy {
    protected userPaymentService: UserPaymentService;
    protected checkoutService: CheckoutService;
    protected checkoutDeliveryService: CheckoutDeliveryService;
    protected checkoutPaymentService: CheckoutPaymentService;
    protected globalMessageService: GlobalMessageService;
    protected routingService: RoutingService;
    protected checkoutConfigService: CheckoutConfigService;
    protected activatedRoute: ActivatedRoute;
    protected translation: TranslationService;
    protected activeCartService: ActiveCartService;
    iconTypes: typeof ICON_TYPE;
    existingPaymentMethods$: Observable<PaymentDetails[]>;
    isLoading$: Observable<boolean>;
    cards$: Observable<{
        content: Card;
        paymentMethod: PaymentDetails;
    }[]>;
    selectedMethod$: Observable<PaymentDetails>;
    isGuestCheckout: boolean;
    newPaymentFormManuallyOpened: boolean;
    protected shouldRedirect: boolean;
    protected deliveryAddress: Address;
    protected checkoutStepUrlNext: string;
    protected checkoutStepUrlPrevious: string;
    constructor(userPaymentService: UserPaymentService, checkoutService: CheckoutService, checkoutDeliveryService: CheckoutDeliveryService, checkoutPaymentService: CheckoutPaymentService, globalMessageService: GlobalMessageService, routingService: RoutingService, checkoutConfigService: CheckoutConfigService, activatedRoute: ActivatedRoute, translation: TranslationService, activeCartService: ActiveCartService);
    ngOnInit(): void;
    selectPaymentMethod(paymentDetails: PaymentDetails): void;
    showNewPaymentForm(): void;
    hideNewPaymentForm(): void;
    setPaymentDetails({ paymentDetails, billingAddress, }: {
        paymentDetails: PaymentDetails;
        billingAddress?: Address;
    }): void;
    ngOnDestroy(): void;
    protected getCardIcon(code: string): string;
    protected sendPaymentMethodFailGlobalMessage(field: string): void;
    protected createCard(paymentDetails: PaymentDetails, cardLabels: {
        textDefaultPaymentMethod: string;
        textExpires: string;
        textUseThisPayment: string;
        textSelected: string;
    }, selected: PaymentDetails): Card;
    goNext(): void;
    goPrevious(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PaymentMethodComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PaymentMethodComponent, "cx-payment-method", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1tZXRob2QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBheW1lbnQtbWV0aG9kLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IEFjdGl2ZUNhcnRTZXJ2aWNlLCBBZGRyZXNzLCBDaGVja291dERlbGl2ZXJ5U2VydmljZSwgQ2hlY2tvdXRQYXltZW50U2VydmljZSwgQ2hlY2tvdXRTZXJ2aWNlLCBHbG9iYWxNZXNzYWdlU2VydmljZSwgUGF5bWVudERldGFpbHMsIFJvdXRpbmdTZXJ2aWNlLCBUcmFuc2xhdGlvblNlcnZpY2UsIFVzZXJQYXltZW50U2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uLy4uLy4uLy4uL3NoYXJlZC9jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICcuLi8uLi8uLi9taXNjL2ljb24nO1xyXG5pbXBvcnQgeyBDaGVja291dENvbmZpZ1NlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9jaGVja291dC1jb25maWcuc2VydmljZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBheW1lbnRNZXRob2RDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgICBwcm90ZWN0ZWQgdXNlclBheW1lbnRTZXJ2aWNlOiBVc2VyUGF5bWVudFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXRTZXJ2aWNlOiBDaGVja291dFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXREZWxpdmVyeVNlcnZpY2U6IENoZWNrb3V0RGVsaXZlcnlTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIGNoZWNrb3V0UGF5bWVudFNlcnZpY2U6IENoZWNrb3V0UGF5bWVudFNlcnZpY2U7XHJcbiAgICBwcm90ZWN0ZWQgZ2xvYmFsTWVzc2FnZVNlcnZpY2U6IEdsb2JhbE1lc3NhZ2VTZXJ2aWNlO1xyXG4gICAgcHJvdGVjdGVkIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZTtcclxuICAgIHByb3RlY3RlZCBjaGVja291dENvbmZpZ1NlcnZpY2U6IENoZWNrb3V0Q29uZmlnU2VydmljZTtcclxuICAgIHByb3RlY3RlZCBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGU7XHJcbiAgICBwcm90ZWN0ZWQgdHJhbnNsYXRpb246IFRyYW5zbGF0aW9uU2VydmljZTtcclxuICAgIHByb3RlY3RlZCBhY3RpdmVDYXJ0U2VydmljZTogQWN0aXZlQ2FydFNlcnZpY2U7XHJcbiAgICBpY29uVHlwZXM6IHR5cGVvZiBJQ09OX1RZUEU7XHJcbiAgICBleGlzdGluZ1BheW1lbnRNZXRob2RzJDogT2JzZXJ2YWJsZTxQYXltZW50RGV0YWlsc1tdPjtcclxuICAgIGlzTG9hZGluZyQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcbiAgICBjYXJkcyQ6IE9ic2VydmFibGU8e1xyXG4gICAgICAgIGNvbnRlbnQ6IENhcmQ7XHJcbiAgICAgICAgcGF5bWVudE1ldGhvZDogUGF5bWVudERldGFpbHM7XHJcbiAgICB9W10+O1xyXG4gICAgc2VsZWN0ZWRNZXRob2QkOiBPYnNlcnZhYmxlPFBheW1lbnREZXRhaWxzPjtcclxuICAgIGlzR3Vlc3RDaGVja291dDogYm9vbGVhbjtcclxuICAgIG5ld1BheW1lbnRGb3JtTWFudWFsbHlPcGVuZWQ6IGJvb2xlYW47XHJcbiAgICBwcm90ZWN0ZWQgc2hvdWxkUmVkaXJlY3Q6IGJvb2xlYW47XHJcbiAgICBwcm90ZWN0ZWQgZGVsaXZlcnlBZGRyZXNzOiBBZGRyZXNzO1xyXG4gICAgcHJvdGVjdGVkIGNoZWNrb3V0U3RlcFVybE5leHQ6IHN0cmluZztcclxuICAgIHByb3RlY3RlZCBjaGVja291dFN0ZXBVcmxQcmV2aW91czogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IodXNlclBheW1lbnRTZXJ2aWNlOiBVc2VyUGF5bWVudFNlcnZpY2UsIGNoZWNrb3V0U2VydmljZTogQ2hlY2tvdXRTZXJ2aWNlLCBjaGVja291dERlbGl2ZXJ5U2VydmljZTogQ2hlY2tvdXREZWxpdmVyeVNlcnZpY2UsIGNoZWNrb3V0UGF5bWVudFNlcnZpY2U6IENoZWNrb3V0UGF5bWVudFNlcnZpY2UsIGdsb2JhbE1lc3NhZ2VTZXJ2aWNlOiBHbG9iYWxNZXNzYWdlU2VydmljZSwgcm91dGluZ1NlcnZpY2U6IFJvdXRpbmdTZXJ2aWNlLCBjaGVja291dENvbmZpZ1NlcnZpY2U6IENoZWNrb3V0Q29uZmlnU2VydmljZSwgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlLCB0cmFuc2xhdGlvbjogVHJhbnNsYXRpb25TZXJ2aWNlLCBhY3RpdmVDYXJ0U2VydmljZTogQWN0aXZlQ2FydFNlcnZpY2UpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIHNlbGVjdFBheW1lbnRNZXRob2QocGF5bWVudERldGFpbHM6IFBheW1lbnREZXRhaWxzKTogdm9pZDtcclxuICAgIHNob3dOZXdQYXltZW50Rm9ybSgpOiB2b2lkO1xyXG4gICAgaGlkZU5ld1BheW1lbnRGb3JtKCk6IHZvaWQ7XHJcbiAgICBzZXRQYXltZW50RGV0YWlscyh7IHBheW1lbnREZXRhaWxzLCBiaWxsaW5nQWRkcmVzcywgfToge1xyXG4gICAgICAgIHBheW1lbnREZXRhaWxzOiBQYXltZW50RGV0YWlscztcclxuICAgICAgICBiaWxsaW5nQWRkcmVzcz86IEFkZHJlc3M7XHJcbiAgICB9KTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgZ2V0Q2FyZEljb24oY29kZTogc3RyaW5nKTogc3RyaW5nO1xyXG4gICAgcHJvdGVjdGVkIHNlbmRQYXltZW50TWV0aG9kRmFpbEdsb2JhbE1lc3NhZ2UoZmllbGQ6IHN0cmluZyk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgY3JlYXRlQ2FyZChwYXltZW50RGV0YWlsczogUGF5bWVudERldGFpbHMsIGNhcmRMYWJlbHM6IHtcclxuICAgICAgICB0ZXh0RGVmYXVsdFBheW1lbnRNZXRob2Q6IHN0cmluZztcclxuICAgICAgICB0ZXh0RXhwaXJlczogc3RyaW5nO1xyXG4gICAgICAgIHRleHRVc2VUaGlzUGF5bWVudDogc3RyaW5nO1xyXG4gICAgICAgIHRleHRTZWxlY3RlZDogc3RyaW5nO1xyXG4gICAgfSwgc2VsZWN0ZWQ6IFBheW1lbnREZXRhaWxzKTogQ2FyZDtcclxuICAgIGdvTmV4dCgpOiB2b2lkO1xyXG4gICAgZ29QcmV2aW91cygpOiB2b2lkO1xyXG59XHJcbiJdfQ==