import { ActivatedRoute } from '@angular/router';
import { DeliveryMode, RoutingConfigService } from '@spartacus/core';
import { CheckoutConfig } from '../config/checkout-config';
import { CheckoutStep, CheckoutStepType } from '../model/checkout-step.model';
import * as ɵngcc0 from '@angular/core';
export declare class CheckoutConfigService {
    private checkoutConfig;
    private routingConfigService;
    steps: CheckoutStep[];
    private express;
    private guest;
    private defaultDeliveryMode;
    constructor(checkoutConfig: CheckoutConfig, routingConfigService: RoutingConfigService);
    getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep;
    getCheckoutStepRoute(currentStepType: CheckoutStepType): string;
    getFirstCheckoutStepRoute(): string;
    getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string;
    getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string;
    getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null;
    protected compareDeliveryCost(deliveryMode1: DeliveryMode, deliveryMode2: DeliveryMode): number;
    protected findMatchingDeliveryMode(deliveryModes: DeliveryMode[], index?: number): string;
    getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string;
    isExpressCheckout(): boolean;
    isGuestCheckout(): boolean;
    private getStepUrlFromActivatedRoute;
    private getStepUrlFromStepRoute;
    private getCheckoutStepIndex;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckoutConfigService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtY29uZmlnLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiY2hlY2tvdXQtY29uZmlnLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHsgRGVsaXZlcnlNb2RlLCBSb3V0aW5nQ29uZmlnU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XHJcbmltcG9ydCB7IENoZWNrb3V0Q29uZmlnIH0gZnJvbSAnLi4vY29uZmlnL2NoZWNrb3V0LWNvbmZpZyc7XHJcbmltcG9ydCB7IENoZWNrb3V0U3RlcCwgQ2hlY2tvdXRTdGVwVHlwZSB9IGZyb20gJy4uL21vZGVsL2NoZWNrb3V0LXN0ZXAubW9kZWwnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGVja291dENvbmZpZ1NlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBjaGVja291dENvbmZpZztcclxuICAgIHByaXZhdGUgcm91dGluZ0NvbmZpZ1NlcnZpY2U7XHJcbiAgICBzdGVwczogQ2hlY2tvdXRTdGVwW107XHJcbiAgICBwcml2YXRlIGV4cHJlc3M7XHJcbiAgICBwcml2YXRlIGd1ZXN0O1xyXG4gICAgcHJpdmF0ZSBkZWZhdWx0RGVsaXZlcnlNb2RlO1xyXG4gICAgY29uc3RydWN0b3IoY2hlY2tvdXRDb25maWc6IENoZWNrb3V0Q29uZmlnLCByb3V0aW5nQ29uZmlnU2VydmljZTogUm91dGluZ0NvbmZpZ1NlcnZpY2UpO1xyXG4gICAgZ2V0Q2hlY2tvdXRTdGVwKGN1cnJlbnRTdGVwVHlwZTogQ2hlY2tvdXRTdGVwVHlwZSk6IENoZWNrb3V0U3RlcDtcclxuICAgIGdldENoZWNrb3V0U3RlcFJvdXRlKGN1cnJlbnRTdGVwVHlwZTogQ2hlY2tvdXRTdGVwVHlwZSk6IHN0cmluZztcclxuICAgIGdldEZpcnN0Q2hlY2tvdXRTdGVwUm91dGUoKTogc3RyaW5nO1xyXG4gICAgZ2V0TmV4dENoZWNrb3V0U3RlcFVybChhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpOiBzdHJpbmc7XHJcbiAgICBnZXRQcmV2aW91c0NoZWNrb3V0U3RlcFVybChhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUpOiBzdHJpbmc7XHJcbiAgICBnZXRDdXJyZW50U3RlcEluZGV4KGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSk6IG51bWJlciB8IG51bGw7XHJcbiAgICBwcm90ZWN0ZWQgY29tcGFyZURlbGl2ZXJ5Q29zdChkZWxpdmVyeU1vZGUxOiBEZWxpdmVyeU1vZGUsIGRlbGl2ZXJ5TW9kZTI6IERlbGl2ZXJ5TW9kZSk6IG51bWJlcjtcclxuICAgIHByb3RlY3RlZCBmaW5kTWF0Y2hpbmdEZWxpdmVyeU1vZGUoZGVsaXZlcnlNb2RlczogRGVsaXZlcnlNb2RlW10sIGluZGV4PzogbnVtYmVyKTogc3RyaW5nO1xyXG4gICAgZ2V0UHJlZmVycmVkRGVsaXZlcnlNb2RlKGRlbGl2ZXJ5TW9kZXM6IERlbGl2ZXJ5TW9kZVtdKTogc3RyaW5nO1xyXG4gICAgaXNFeHByZXNzQ2hlY2tvdXQoKTogYm9vbGVhbjtcclxuICAgIGlzR3Vlc3RDaGVja291dCgpOiBib29sZWFuO1xyXG4gICAgcHJpdmF0ZSBnZXRTdGVwVXJsRnJvbUFjdGl2YXRlZFJvdXRlO1xyXG4gICAgcHJpdmF0ZSBnZXRTdGVwVXJsRnJvbVN0ZXBSb3V0ZTtcclxuICAgIHByaXZhdGUgZ2V0Q2hlY2tvdXRTdGVwSW5kZXg7XHJcbn1cclxuIl19