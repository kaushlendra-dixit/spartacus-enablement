import { ComponentFactory, ComponentFactoryResolver, ComponentRef, RendererFactory2 } from '@angular/core';
import { Observable } from 'rxjs';
import { OutletService } from '../../../cms-structure/outlet/index';
import { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';
import { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';
import { LaunchRenderStrategy } from './launch-render.strategy';
import * as ɵngcc0 from '@angular/core';
export declare class OutletRenderStrategy extends LaunchRenderStrategy {
    protected document: any;
    protected rendererFactory: RendererFactory2;
    protected outletService: OutletService<ComponentFactory<any>>;
    protected componentFactoryResolver: ComponentFactoryResolver;
    protected outletRendererService: OutletRendererService;
    constructor(document: any, rendererFactory: RendererFactory2, outletService: OutletService<ComponentFactory<any>>, componentFactoryResolver: ComponentFactoryResolver, outletRendererService: OutletRendererService);
    /**
     * Renders the element in the configured outlet
     *
     * @param config
     * @param caller
     * @param vcr
     */
    render(config: LaunchOutletDialog, caller: LAUNCH_CALLER | string): Observable<ComponentRef<any>>;
    hasMatch(config: LaunchOutletDialog): boolean;
    remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OutletRenderStrategy, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0bGV0LXJlbmRlci5zdHJhdGVneS5kLnRzIiwic291cmNlcyI6WyJvdXRsZXQtcmVuZGVyLnN0cmF0ZWd5LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRGYWN0b3J5LCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIENvbXBvbmVudFJlZiwgUmVuZGVyZXJGYWN0b3J5MiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE91dGxldFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9jbXMtc3RydWN0dXJlL291dGxldC9pbmRleCc7XHJcbmltcG9ydCB7IE91dGxldFJlbmRlcmVyU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2Ntcy1zdHJ1Y3R1cmUvb3V0bGV0L291dGxldC1yZW5kZXJlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTGF1bmNoT3V0bGV0RGlhbG9nLCBMQVVOQ0hfQ0FMTEVSIH0gZnJvbSAnLi4vY29uZmlnL2luZGV4JztcclxuaW1wb3J0IHsgTGF1bmNoUmVuZGVyU3RyYXRlZ3kgfSBmcm9tICcuL2xhdW5jaC1yZW5kZXIuc3RyYXRlZ3knO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPdXRsZXRSZW5kZXJTdHJhdGVneSBleHRlbmRzIExhdW5jaFJlbmRlclN0cmF0ZWd5IHtcclxuICAgIHByb3RlY3RlZCBkb2N1bWVudDogYW55O1xyXG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyRmFjdG9yeTogUmVuZGVyZXJGYWN0b3J5MjtcclxuICAgIHByb3RlY3RlZCBvdXRsZXRTZXJ2aWNlOiBPdXRsZXRTZXJ2aWNlPENvbXBvbmVudEZhY3Rvcnk8YW55Pj47XHJcbiAgICBwcm90ZWN0ZWQgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XHJcbiAgICBwcm90ZWN0ZWQgb3V0bGV0UmVuZGVyZXJTZXJ2aWNlOiBPdXRsZXRSZW5kZXJlclNlcnZpY2U7XHJcbiAgICBjb25zdHJ1Y3Rvcihkb2N1bWVudDogYW55LCByZW5kZXJlckZhY3Rvcnk6IFJlbmRlcmVyRmFjdG9yeTIsIG91dGxldFNlcnZpY2U6IE91dGxldFNlcnZpY2U8Q29tcG9uZW50RmFjdG9yeTxhbnk+PiwgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIG91dGxldFJlbmRlcmVyU2VydmljZTogT3V0bGV0UmVuZGVyZXJTZXJ2aWNlKTtcclxuICAgIC8qKlxyXG4gICAgICogUmVuZGVycyB0aGUgZWxlbWVudCBpbiB0aGUgY29uZmlndXJlZCBvdXRsZXRcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gY29uZmlnXHJcbiAgICAgKiBAcGFyYW0gY2FsbGVyXHJcbiAgICAgKiBAcGFyYW0gdmNyXHJcbiAgICAgKi9cclxuICAgIHJlbmRlcihjb25maWc6IExhdW5jaE91dGxldERpYWxvZywgY2FsbGVyOiBMQVVOQ0hfQ0FMTEVSIHwgc3RyaW5nKTogT2JzZXJ2YWJsZTxDb21wb25lbnRSZWY8YW55Pj47XHJcbiAgICBoYXNNYXRjaChjb25maWc6IExhdW5jaE91dGxldERpYWxvZyk6IGJvb2xlYW47XHJcbiAgICByZW1vdmUoY2FsbGVyOiBMQVVOQ0hfQ0FMTEVSIHwgc3RyaW5nLCBjb25maWc6IExhdW5jaE91dGxldERpYWxvZyk6IHZvaWQ7XHJcbn1cclxuIl19