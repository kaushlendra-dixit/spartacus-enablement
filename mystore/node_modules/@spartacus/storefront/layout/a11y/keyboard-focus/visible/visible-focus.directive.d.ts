import { BaseFocusDirective } from '../base/base-focus.directive';
import { VisibleFocusConfig } from '../keyboard-focus.model';
/**
 * Directive implementation that adds a CSS class to the host element
 * when the moused is used to focus an element. As soon as the keyboard
 * is used, the class is removed.
 *
 * This feature must be explicitly enabled with the `disableMouseFocus` config.
 *
 * The appearance of the visual focus depends on the CSS implementation to
 * begin with. Spartacus styles add a blue border around each focusable element.
 * This can be considered annoying by keyboard users, as they won't need such a
 * strong indication of the selected element.
 */
import * as ɵngcc0 from '@angular/core';
export declare class VisibleFocusDirective extends BaseFocusDirective {
    protected defaultConfig: VisibleFocusConfig;
    protected config: VisibleFocusConfig;
    /** Controls a css class to hide focus visible CSS rules */
    mouseFocus: boolean;
    handleMousedown(): void;
    handleKeydown(event: KeyboardEvent): void;
    /**
     * Indicates whether the configurations setup to disable visual focus.
     */
    protected get shouldFocusVisible(): boolean;
    /**
     * Indicates whether the event is used to navigate the storefront. Some keyboard events
     * are used by mouse users to fill a form or interact with the OS or browser.
     */
    protected isNavigating(event: KeyboardEvent): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VisibleFocusDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<VisibleFocusDirective, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzaWJsZS1mb2N1cy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsidmlzaWJsZS1mb2N1cy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VGb2N1c0RpcmVjdGl2ZSB9IGZyb20gJy4uL2Jhc2UvYmFzZS1mb2N1cy5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBWaXNpYmxlRm9jdXNDb25maWcgfSBmcm9tICcuLi9rZXlib2FyZC1mb2N1cy5tb2RlbCc7XHJcbi8qKlxyXG4gKiBEaXJlY3RpdmUgaW1wbGVtZW50YXRpb24gdGhhdCBhZGRzIGEgQ1NTIGNsYXNzIHRvIHRoZSBob3N0IGVsZW1lbnRcclxuICogd2hlbiB0aGUgbW91c2VkIGlzIHVzZWQgdG8gZm9jdXMgYW4gZWxlbWVudC4gQXMgc29vbiBhcyB0aGUga2V5Ym9hcmRcclxuICogaXMgdXNlZCwgdGhlIGNsYXNzIGlzIHJlbW92ZWQuXHJcbiAqXHJcbiAqIFRoaXMgZmVhdHVyZSBtdXN0IGJlIGV4cGxpY2l0bHkgZW5hYmxlZCB3aXRoIHRoZSBgZGlzYWJsZU1vdXNlRm9jdXNgIGNvbmZpZy5cclxuICpcclxuICogVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHZpc3VhbCBmb2N1cyBkZXBlbmRzIG9uIHRoZSBDU1MgaW1wbGVtZW50YXRpb24gdG9cclxuICogYmVnaW4gd2l0aC4gU3BhcnRhY3VzIHN0eWxlcyBhZGQgYSBibHVlIGJvcmRlciBhcm91bmQgZWFjaCBmb2N1c2FibGUgZWxlbWVudC5cclxuICogVGhpcyBjYW4gYmUgY29uc2lkZXJlZCBhbm5veWluZyBieSBrZXlib2FyZCB1c2VycywgYXMgdGhleSB3b24ndCBuZWVkIHN1Y2ggYVxyXG4gKiBzdHJvbmcgaW5kaWNhdGlvbiBvZiB0aGUgc2VsZWN0ZWQgZWxlbWVudC5cclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFZpc2libGVGb2N1c0RpcmVjdGl2ZSBleHRlbmRzIEJhc2VGb2N1c0RpcmVjdGl2ZSB7XHJcbiAgICBwcm90ZWN0ZWQgZGVmYXVsdENvbmZpZzogVmlzaWJsZUZvY3VzQ29uZmlnO1xyXG4gICAgcHJvdGVjdGVkIGNvbmZpZzogVmlzaWJsZUZvY3VzQ29uZmlnO1xyXG4gICAgLyoqIENvbnRyb2xzIGEgY3NzIGNsYXNzIHRvIGhpZGUgZm9jdXMgdmlzaWJsZSBDU1MgcnVsZXMgKi9cclxuICAgIG1vdXNlRm9jdXM6IGJvb2xlYW47XHJcbiAgICBoYW5kbGVNb3VzZWRvd24oKTogdm9pZDtcclxuICAgIGhhbmRsZUtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgY29uZmlndXJhdGlvbnMgc2V0dXAgdG8gZGlzYWJsZSB2aXN1YWwgZm9jdXMuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBnZXQgc2hvdWxkRm9jdXNWaXNpYmxlKCk6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBldmVudCBpcyB1c2VkIHRvIG5hdmlnYXRlIHRoZSBzdG9yZWZyb250LiBTb21lIGtleWJvYXJkIGV2ZW50c1xyXG4gICAgICogYXJlIHVzZWQgYnkgbW91c2UgdXNlcnMgdG8gZmlsbCBhIGZvcm0gb3IgaW50ZXJhY3Qgd2l0aCB0aGUgT1Mgb3IgYnJvd3Nlci5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGlzTmF2aWdhdGluZyhldmVudDogS2V5Ym9hcmRFdmVudCk6IGJvb2xlYW47XHJcbn1cclxuIl19