import { ElementRef, OnInit } from '@angular/core';
import { BaseFocusConfig } from '../keyboard-focus.model';
import { BaseFocusService } from './base-focus.service';
/**
 * Abstract directive that provides a common interface for all focus directives:
 * - Block Focus
 * - Persist Focus
 * - Escape Focus
 * - Auto Focus
 * - Tab Focus
 * - Trap Focus
 * - Lock Focus
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class BaseFocusDirective implements OnInit {
    protected elementRef: ElementRef<HTMLElement>;
    protected service: BaseFocusService;
    /**
     * Optional configuration for the focus directive drives the behaviour of the keyboard
     * focus directive.
     */
    protected config: BaseFocusConfig;
    /**
     * A default config can be provided for each directive if a specific focus directive
     * is used directly. i.e. `<div cxAutoFocus></div>`
     */
    protected defaultConfig: BaseFocusConfig;
    tabindex: number;
    constructor(elementRef: ElementRef<HTMLElement>, service: BaseFocusService);
    ngOnInit(): void;
    /**
     * Override the (input) config if it undefined or an empty string, with the
     * `defaultConfig`. The `defaultConfig` might be specified for each directive
     * differently. If a specific directive is used (i.e. `cxAutoFocus`), the
     * specific (inherited) defaultConfig will be used.
     */
    protected setDefaultConfiguration(): void;
    /**
     * Helper method to return the host element for the directive
     * given by the `elementRef`.
     */
    protected get host(): HTMLElement;
    /**
     * Force a tabindex on the host element if it is _requried_ to make the element
     * focusable. If the element is focusable by nature or by a given tabindex, the
     * `tabindex` is not applied.
     *
     * Buttons, active links, etc. do no need an explicit tabindex to receive focus.
     */
    protected set requiredTabindex(tabindex: number);
    /**
     * Returns true if the host element does not have a tabindex defined
     * and it also doesn't get focus by browsers nature (i.e. button or
     * active link).
     */
    protected get requiresExplicitTabIndex(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BaseFocusDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<BaseFocusDirective, never, never, { "tabindex": "tabindex"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1mb2N1cy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiYmFzZS1mb2N1cy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJhc2VGb2N1c0NvbmZpZyB9IGZyb20gJy4uL2tleWJvYXJkLWZvY3VzLm1vZGVsJztcclxuaW1wb3J0IHsgQmFzZUZvY3VzU2VydmljZSB9IGZyb20gJy4vYmFzZS1mb2N1cy5zZXJ2aWNlJztcclxuLyoqXHJcbiAqIEFic3RyYWN0IGRpcmVjdGl2ZSB0aGF0IHByb3ZpZGVzIGEgY29tbW9uIGludGVyZmFjZSBmb3IgYWxsIGZvY3VzIGRpcmVjdGl2ZXM6XHJcbiAqIC0gQmxvY2sgRm9jdXNcclxuICogLSBQZXJzaXN0IEZvY3VzXHJcbiAqIC0gRXNjYXBlIEZvY3VzXHJcbiAqIC0gQXV0byBGb2N1c1xyXG4gKiAtIFRhYiBGb2N1c1xyXG4gKiAtIFRyYXAgRm9jdXNcclxuICogLSBMb2NrIEZvY3VzXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBCYXNlRm9jdXNEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gICAgcHJvdGVjdGVkIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xyXG4gICAgcHJvdGVjdGVkIHNlcnZpY2U6IEJhc2VGb2N1c1NlcnZpY2U7XHJcbiAgICAvKipcclxuICAgICAqIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBmb2N1cyBkaXJlY3RpdmUgZHJpdmVzIHRoZSBiZWhhdmlvdXIgb2YgdGhlIGtleWJvYXJkXHJcbiAgICAgKiBmb2N1cyBkaXJlY3RpdmUuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBjb25maWc6IEJhc2VGb2N1c0NvbmZpZztcclxuICAgIC8qKlxyXG4gICAgICogQSBkZWZhdWx0IGNvbmZpZyBjYW4gYmUgcHJvdmlkZWQgZm9yIGVhY2ggZGlyZWN0aXZlIGlmIGEgc3BlY2lmaWMgZm9jdXMgZGlyZWN0aXZlXHJcbiAgICAgKiBpcyB1c2VkIGRpcmVjdGx5LiBpLmUuIGA8ZGl2IGN4QXV0b0ZvY3VzPjwvZGl2PmBcclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIGRlZmF1bHRDb25maWc6IEJhc2VGb2N1c0NvbmZpZztcclxuICAgIHRhYmluZGV4OiBudW1iZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Piwgc2VydmljZTogQmFzZUZvY3VzU2VydmljZSk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgLyoqXHJcbiAgICAgKiBPdmVycmlkZSB0aGUgKGlucHV0KSBjb25maWcgaWYgaXQgdW5kZWZpbmVkIG9yIGFuIGVtcHR5IHN0cmluZywgd2l0aCB0aGVcclxuICAgICAqIGBkZWZhdWx0Q29uZmlnYC4gVGhlIGBkZWZhdWx0Q29uZmlnYCBtaWdodCBiZSBzcGVjaWZpZWQgZm9yIGVhY2ggZGlyZWN0aXZlXHJcbiAgICAgKiBkaWZmZXJlbnRseS4gSWYgYSBzcGVjaWZpYyBkaXJlY3RpdmUgaXMgdXNlZCAoaS5lLiBgY3hBdXRvRm9jdXNgKSwgdGhlXHJcbiAgICAgKiBzcGVjaWZpYyAoaW5oZXJpdGVkKSBkZWZhdWx0Q29uZmlnIHdpbGwgYmUgdXNlZC5cclxuICAgICAqL1xyXG4gICAgcHJvdGVjdGVkIHNldERlZmF1bHRDb25maWd1cmF0aW9uKCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIEhlbHBlciBtZXRob2QgdG8gcmV0dXJuIHRoZSBob3N0IGVsZW1lbnQgZm9yIHRoZSBkaXJlY3RpdmVcclxuICAgICAqIGdpdmVuIGJ5IHRoZSBgZWxlbWVudFJlZmAuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBnZXQgaG9zdCgpOiBIVE1MRWxlbWVudDtcclxuICAgIC8qKlxyXG4gICAgICogRm9yY2UgYSB0YWJpbmRleCBvbiB0aGUgaG9zdCBlbGVtZW50IGlmIGl0IGlzIF9yZXF1cmllZF8gdG8gbWFrZSB0aGUgZWxlbWVudFxyXG4gICAgICogZm9jdXNhYmxlLiBJZiB0aGUgZWxlbWVudCBpcyBmb2N1c2FibGUgYnkgbmF0dXJlIG9yIGJ5IGEgZ2l2ZW4gdGFiaW5kZXgsIHRoZVxyXG4gICAgICogYHRhYmluZGV4YCBpcyBub3QgYXBwbGllZC5cclxuICAgICAqXHJcbiAgICAgKiBCdXR0b25zLCBhY3RpdmUgbGlua3MsIGV0Yy4gZG8gbm8gbmVlZCBhbiBleHBsaWNpdCB0YWJpbmRleCB0byByZWNlaXZlIGZvY3VzLlxyXG4gICAgICovXHJcbiAgICBwcm90ZWN0ZWQgc2V0IHJlcXVpcmVkVGFiaW5kZXgodGFiaW5kZXg6IG51bWJlcik7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgaG9zdCBlbGVtZW50IGRvZXMgbm90IGhhdmUgYSB0YWJpbmRleCBkZWZpbmVkXHJcbiAgICAgKiBhbmQgaXQgYWxzbyBkb2Vzbid0IGdldCBmb2N1cyBieSBicm93c2VycyBuYXR1cmUgKGkuZS4gYnV0dG9uIG9yXHJcbiAgICAgKiBhY3RpdmUgbGluaykuXHJcbiAgICAgKi9cclxuICAgIHByb3RlY3RlZCBnZXQgcmVxdWlyZXNFeHBsaWNpdFRhYkluZGV4KCk6IGJvb2xlYW47XHJcbn1cclxuIl19