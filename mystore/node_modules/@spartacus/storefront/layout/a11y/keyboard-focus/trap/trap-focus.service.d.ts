import { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';
import { TabFocusService } from '../tab/tab-focus.service';
import * as ɵngcc0 from '@angular/core';
export declare class TrapFocusService extends TabFocusService {
    /**
     * Indicates whether any of the child elements of the host are focusable.
     *
     * @param host `HTMLElement` that is used to query the focusable elements.
     */
    hasFocusableChildren(host: HTMLElement): boolean;
    /**
     * Focus the next or previous element of all available focusable elements.
     * The focus is _trapped_ in case there's no next or previous available element.
     * The focus will automatically move the start or end of the list.
     */
    moveFocus(host: HTMLElement, config: TrapFocusConfig, increment: MOVE_FOCUS, event: UIEvent): void;
    protected getTrapStart(trap: boolean | 'start' | 'end'): boolean;
    protected getTrapEnd(trap: boolean | 'start' | 'end'): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TrapFocusService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhcC1mb2N1cy5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInRyYXAtZm9jdXMuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTU9WRV9GT0NVUywgVHJhcEZvY3VzQ29uZmlnIH0gZnJvbSAnLi4va2V5Ym9hcmQtZm9jdXMubW9kZWwnO1xyXG5pbXBvcnQgeyBUYWJGb2N1c1NlcnZpY2UgfSBmcm9tICcuLi90YWIvdGFiLWZvY3VzLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUcmFwRm9jdXNTZXJ2aWNlIGV4dGVuZHMgVGFiRm9jdXNTZXJ2aWNlIHtcclxuICAgIC8qKlxyXG4gICAgICogSW5kaWNhdGVzIHdoZXRoZXIgYW55IG9mIHRoZSBjaGlsZCBlbGVtZW50cyBvZiB0aGUgaG9zdCBhcmUgZm9jdXNhYmxlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBob3N0IGBIVE1MRWxlbWVudGAgdGhhdCBpcyB1c2VkIHRvIHF1ZXJ5IHRoZSBmb2N1c2FibGUgZWxlbWVudHMuXHJcbiAgICAgKi9cclxuICAgIGhhc0ZvY3VzYWJsZUNoaWxkcmVuKGhvc3Q6IEhUTUxFbGVtZW50KTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogRm9jdXMgdGhlIG5leHQgb3IgcHJldmlvdXMgZWxlbWVudCBvZiBhbGwgYXZhaWxhYmxlIGZvY3VzYWJsZSBlbGVtZW50cy5cclxuICAgICAqIFRoZSBmb2N1cyBpcyBfdHJhcHBlZF8gaW4gY2FzZSB0aGVyZSdzIG5vIG5leHQgb3IgcHJldmlvdXMgYXZhaWxhYmxlIGVsZW1lbnQuXHJcbiAgICAgKiBUaGUgZm9jdXMgd2lsbCBhdXRvbWF0aWNhbGx5IG1vdmUgdGhlIHN0YXJ0IG9yIGVuZCBvZiB0aGUgbGlzdC5cclxuICAgICAqL1xyXG4gICAgbW92ZUZvY3VzKGhvc3Q6IEhUTUxFbGVtZW50LCBjb25maWc6IFRyYXBGb2N1c0NvbmZpZywgaW5jcmVtZW50OiBNT1ZFX0ZPQ1VTLCBldmVudDogVUlFdmVudCk6IHZvaWQ7XHJcbiAgICBwcm90ZWN0ZWQgZ2V0VHJhcFN0YXJ0KHRyYXA6IGJvb2xlYW4gfCAnc3RhcnQnIHwgJ2VuZCcpOiBib29sZWFuO1xyXG4gICAgcHJvdGVjdGVkIGdldFRyYXBFbmQodHJhcDogYm9vbGVhbiB8ICdzdGFydCcgfCAnZW5kJyk6IGJvb2xlYW47XHJcbn1cclxuIl19