import { ElementRef } from '@angular/core';
import { AutoFocusDirective } from '../autofocus/auto-focus.directive';
import { TabFocusConfig } from '../keyboard-focus.model';
import { TabFocusService } from './tab-focus.service';
/**
 * Directive to move the focus of ("locked") child elements. This is useful
 * for a nested list of tabs, carousel slides or any group of elements that
 * requires horizontal navigation.
 */
import * as ɵngcc0 from '@angular/core';
export declare class TabFocusDirective extends AutoFocusDirective {
    protected elementRef: ElementRef;
    protected service: TabFocusService;
    /** `tab` defaults to true if the directive `cxTabFocus` is used. */
    protected defaultConfig: TabFocusConfig;
    protected config: TabFocusConfig;
    handleNextTab(event: KeyboardEvent): void;
    handlePreviousTab(event: KeyboardEvent): void;
    constructor(elementRef: ElementRef, service: TabFocusService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabFocusDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TabFocusDirective, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWZvY3VzLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJ0YWItZm9jdXMuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEF1dG9Gb2N1c0RpcmVjdGl2ZSB9IGZyb20gJy4uL2F1dG9mb2N1cy9hdXRvLWZvY3VzLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFRhYkZvY3VzQ29uZmlnIH0gZnJvbSAnLi4va2V5Ym9hcmQtZm9jdXMubW9kZWwnO1xyXG5pbXBvcnQgeyBUYWJGb2N1c1NlcnZpY2UgfSBmcm9tICcuL3RhYi1mb2N1cy5zZXJ2aWNlJztcclxuLyoqXHJcbiAqIERpcmVjdGl2ZSB0byBtb3ZlIHRoZSBmb2N1cyBvZiAoXCJsb2NrZWRcIikgY2hpbGQgZWxlbWVudHMuIFRoaXMgaXMgdXNlZnVsXHJcbiAqIGZvciBhIG5lc3RlZCBsaXN0IG9mIHRhYnMsIGNhcm91c2VsIHNsaWRlcyBvciBhbnkgZ3JvdXAgb2YgZWxlbWVudHMgdGhhdFxyXG4gKiByZXF1aXJlcyBob3Jpem9udGFsIG5hdmlnYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUYWJGb2N1c0RpcmVjdGl2ZSBleHRlbmRzIEF1dG9Gb2N1c0RpcmVjdGl2ZSB7XHJcbiAgICBwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZjtcclxuICAgIHByb3RlY3RlZCBzZXJ2aWNlOiBUYWJGb2N1c1NlcnZpY2U7XHJcbiAgICAvKiogYHRhYmAgZGVmYXVsdHMgdG8gdHJ1ZSBpZiB0aGUgZGlyZWN0aXZlIGBjeFRhYkZvY3VzYCBpcyB1c2VkLiAqL1xyXG4gICAgcHJvdGVjdGVkIGRlZmF1bHRDb25maWc6IFRhYkZvY3VzQ29uZmlnO1xyXG4gICAgcHJvdGVjdGVkIGNvbmZpZzogVGFiRm9jdXNDb25maWc7XHJcbiAgICBoYW5kbGVOZXh0VGFiKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIGhhbmRsZVByZXZpb3VzVGFiKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHNlcnZpY2U6IFRhYkZvY3VzU2VydmljZSk7XHJcbn1cclxuIl19